var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.724,1,3.068]],["body/guards/AccessGuard.html",[0,3.337,1,4.788,2,0.234,3,0.234,4,0.204,5,4.4,6,0.234,7,1.14,8,6.704,9,0.947,10,2.56,11,1.944,12,4.052,13,0.955,14,4.4,15,1.349,16,0.022,17,1.015,18,0.377,19,1.015,20,1.978,21,4.4,22,6.492,23,3.116,24,6.704,25,4.4,26,2.494,27,1.175,28,2.832,29,3.336,30,0.824,31,1.349,32,0.662,33,2.224,34,3.759,35,4.4,36,3.337,37,2.224,38,4.4,39,1.47,40,2.77,41,2.224,42,0.234,43,0.328,44,1.182,45,1.317,46,1.74,47,4.4,48,4.25,49,4.4,50,1.958,51,4.4,52,1.47,53,1.002,54,2.224,55,1.844,56,1.119,57,3.759,58,3.759,59,4.4,60,4.4,61,4.4,62,4.4,63,3.759,64,4.4,65,2.56,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.268,68,2.466]],["body/classes/AddressModel.html",[2,0.26,3,0.26,4,0.227,6,0.26,13,1.2,16,0.021,18,0.473,19,1.084,23,3.407,42,0.26,43,0.446,66,0.017,67,0.017,68,4.111,69,4.179,70,0.844,71,3.001,72,5.76,73,6.742,74,6.742,75,6.742,76,1.345,77,4.892,78,4.892,79,2.046,80,4.892,81,4.892,82,4.892,83,4.892]],["title/components/AdminComponent.html",[84,0.38,85,0.964]],["body/components/AdminComponent.html",[2,0.142,3,0.142,4,0.124,6,0.142,7,0.81,9,0.577,10,1.56,11,1.679,13,1.107,15,0.645,16,0.022,17,0.951,18,0.377,19,0.486,20,1.675,27,0.951,30,0.645,32,0.404,39,0.896,42,0.142,43,0.2,44,1.069,45,0.803,52,1.754,53,1.423,55,2.201,56,1.012,66,0.011,67,0.011,70,0.561,71,1.771,76,1.156,84,0.697,85,1.41,86,0.947,87,0.947,88,0.947,89,2.291,90,1.329,91,2.487,92,3.98,93,3.98,94,3.98,95,3.98,96,1.5,97,0.896,98,2.102,99,1.981,100,2.733,101,1.258,102,3.98,103,1.258,104,3.98,105,3.982,106,5.251,107,4.486,108,4.486,109,5.251,110,5.251,111,4.486,112,5.251,113,1.66,114,3.98,115,2.076,116,2.201,117,3.018,118,2.682,119,2.733,120,1.885,121,3.98,122,4.199,123,1.66,124,2.682,125,3.4,126,3.78,127,3.4,128,2.505,129,2.682,130,3.98,131,2.783,132,5.02,133,2.682,134,3.98,135,2.682,136,2.076,137,4.035,138,3.419,139,2.959,140,2.682,141,3.98,142,2.316,143,1.5,144,0.896,145,0.896,146,2.682,147,1.885,148,2.682,149,3.98,150,3.98,151,1.001,152,2.291,153,2.682,154,2.682,155,0.896,156,2.291,157,2.682,158,1.876,159,2.682,160,2.682,161,5.251,162,2.682,163,2.291,164,2.682,165,2.682,166,2.682,167,2.682,168,2.291,169,2.291,170,2.682,171,3.018,172,3.4,173,2.316,174,3.4,175,3.018,176,3.4,177,3.98,178,0.848,179,1.405,180,1.128,181,1.854,182,0.947,183,0.76,184,0.947,185,0.947,186,0.76,187,0.947,188,0.72,189,0.72,190,0.947,191,0.72,192,0.947,193,0.72,194,0.947,195,0.72,196,0.947,197,0.76,198,0.947,199,0.72,200,0.947,201,0.72,202,0.947,203,0.76,204,0.947,205,0.76,206,0.947,207,0.72,208,0.947,209,0.72,210,0.947,211,0.72,212,0.947,213,0.72,214,0.896,215,0.72,216,0.896,217,0.947]],["title/interfaces/ApiError.html",[218,0.731,219,2.466]],["body/interfaces/ApiError.html",[2,0.224,3,0.224,4,0.196,6,0.224,16,0.022,18,0.488,19,0.988,27,1.094,42,0.29,50,1.877,53,1.242,54,2.756,66,0.016,67,0.016,70,0.769,76,1.227,79,1.911,218,1.11,219,3.745,220,3.199,221,3.199,222,5.301,223,4.655,224,4.267,225,5.454,226,6.39,227,3.433,228,5.454,229,3.433,230,4.136,231,4.11,232,4.66,233,2.756,234,4.66,235,5.454,236,5.454,237,3.745,238,5.454,239,3.805,240,3.433,241,5.454,242,3.433,243,4.846,244,5.164,245,4.66,246,4.218,247,3.604,248,3.604,249,3.604,250,3.604,251,4.66]],["title/components/AppComponent.html",[84,0.38,186,1.018]],["body/components/AppComponent.html",[2,0.213,3,0.213,4,0.186,6,0.213,7,1.073,13,1.068,15,0.964,16,0.021,17,1.134,18,0.396,19,0.725,27,0.725,30,0.492,32,0.603,41,2.664,42,0.213,43,0.298,56,1.341,66,0.015,67,0.015,70,0.743,76,1.252,84,0.689,85,1.075,86,1.414,87,1.414,88,1.414,97,1.338,98,2.202,99,2.091,101,1.667,103,1.667,123,1.266,143,1.266,144,1.338,145,1.338,178,1.266,179,1.861,180,1.495,181,2.211,182,1.414,183,1.136,184,1.414,185,1.414,186,1.776,187,1.414,188,1.075,189,1.075,190,1.414,191,1.075,192,1.414,193,1.075,194,1.414,195,1.075,196,1.414,197,1.136,198,1.414,199,1.075,200,1.414,201,1.075,202,1.414,203,1.136,204,1.414,205,1.136,206,1.414,207,1.075,208,1.414,209,1.075,210,1.414,211,1.075,212,1.414,213,1.075,214,1.338,215,1.075,216,1.338,217,1.414,252,3.421,253,5.272,254,5.272,255,5.351,256,3.644,257,6.264,258,5.272,259,5.272,260,4.005,261,3.421,262,4.005,263,4.005,264,4.005,265,4.005]],["title/modules/AppModule.html",[266,1.943,267,2.466]],["body/modules/AppModule.html",[2,0.147,3,0.147,4,0.128,11,1.777,16,0.022,30,0.901,32,0.415,39,1.611,42,0.216,43,0.205,65,2.364,66,0.012,67,0.012,85,1.594,99,0.782,151,1.029,178,0.872,183,1.683,186,1.902,188,1.594,191,1.594,193,1.594,195,1.594,197,1.683,199,1.594,201,1.594,203,1.683,205,1.683,207,1.594,209,1.594,211,1.594,213,1.594,215,1.594,240,3.572,242,3.736,266,2.198,267,5.124,268,1.393,269,3.658,270,4.036,271,2.355,272,2.355,273,2.355,274,2.355,275,2.355,276,3.736,277,2.999,278,4.076,279,3.736,280,2.488,281,3.47,282,2.355,283,1.492,284,2.757,285,4.062,286,3.47,287,1.893,288,4.062,289,2.757,290,3.47,291,4.823,292,4.062,293,2.355,294,4.062,295,4.062,296,2.091,297,2.355,298,2.757,299,2.355,300,2.355,301,2.355,302,2.355,303,2.355,304,1.893,305,2.355,306,2.355,307,2.757,308,4.062,309,2.757,310,1.893,311,2.757,312,2.355,313,2.757,314,2.757,315,2.757,316,2.757,317,2.757,318,1.492,319,2.757,320,3.47,321,1.893,322,2.091,323,4.823,324,1.604,325,2.757,326,2.091,327,2.757,328,2.355,329,2.355,330,2.757,331,2.355,332,1.492,333,2.355,334,2.757,335,2.757,336,2.355,337,2.355,338,1.893,339,2.355,340,2.355,341,1.893,342,2.355,343,3.47,344,2.355,345,2.355,346,2.757,347,2.757,348,2.757,349,2.757,350,2.757,351,2.355,352,4.062,353,4.062]],["title/classes/AppPage.html",[43,0.268,354,2.724]],["body/classes/AppPage.html",[2,0.28,3,0.28,4,0.244,6,0.28,7,1.274,13,1.068,16,0.021,27,1.252,30,0.648,41,2.663,42,0.28,43,0.467,66,0.018,67,0.018,180,1.494,287,3.619,354,4.749,355,4.503,356,6.913,357,6.913,358,5.271,359,5.271,360,4.503,361,5.271,362,5.271,363,5.271]],["title/modules/AppRoutingModule.html",[266,1.943,276,2.261]],["body/modules/AppRoutingModule.html",[2,0.207,3,0.207,4,0.181,16,0.022,26,2.872,30,0.89,32,0.587,33,1.972,42,0.309,43,0.386,66,0.015,67,0.015,84,0.755,85,1.392,100,2.68,115,1.543,180,1.107,183,1.47,188,1.392,189,1.048,191,1.392,193,1.392,195,1.392,201,1.392,203,1.47,207,1.392,209,1.392,213,1.392,266,2.111,269,2.96,276,3.263,290,4.428,299,3.334,300,3.334,301,3.334,302,3.334,303,3.334,304,2.68,305,3.334,306,3.334,312,3.334,328,3.334,329,3.334,336,3.334,337,3.334,338,2.68,339,3.334,340,3.334,341,2.68,342,3.334,364,3.903,365,3.903,366,5.183,367,3.334,368,5.183,369,3.903,370,3.903,371,3.334,372,2.457,373,3.903,374,3.903,375,2.96,376,3.334,377,1.378,378,7.175,379,3.903,380,3.903,381,5.183,382,3.996,383,3.903,384,2.457,385,2.271,386,3.903,387,3.334,388,1.848,389,2.96,390,3.903,391,2.96,392,3.903]],["title/injectables/AuthService.html",[31,0.864,277,1.815]],["body/injectables/AuthService.html",[2,0.166,3,0.166,4,0.145,6,0.166,7,0.905,9,0.958,11,1.69,12,3.284,13,0.962,15,1.247,16,0.022,17,0.938,18,0.348,19,0.938,20,1.992,26,2.306,27,1.122,28,2.618,29,1.691,30,0.826,31,1.247,32,0.47,33,1.58,36,2.371,37,1.58,39,1.044,40,1.968,41,1.58,42,0.166,43,0.233,46,2.231,52,1.486,53,1.358,55,2.365,66,0.013,67,0.013,71,1.98,76,1.245,90,1.486,123,1.407,143,1.784,155,1.992,171,3.928,229,2.801,231,2.589,237,4.379,239,3.902,256,3.96,268,2.248,277,2.248,320,2.671,321,3.876,324,2.589,377,1.571,384,2.801,385,1.819,391,4.28,393,2.671,394,4.701,395,2.371,396,4.103,397,3.126,398,3.801,399,2.589,400,4.449,401,2.407,402,3.374,403,3.261,404,4.449,405,4.449,406,5.18,407,3.126,408,4.476,409,3.126,410,4.449,411,3.126,412,4.822,413,3.126,414,2.371,415,2.671,416,1.968,417,2.371,418,3.126,419,3.126,420,3.126,421,4.449,422,3.126,423,3.126,424,3.126,425,3.126,426,3.126,427,3.126,428,3.126,429,1.58,430,1.391,431,3.126,432,3.126,433,2.371,434,3.126,435,4.449,436,4.449,437,3.126,438,3.126,439,3.126,440,3.126,441,3.126,442,3.126,443,3.126,444,3.126,445,3.126,446,3.126,447,3.126,448,3.126,449,3.126,450,3.126,451,3.126,452,3.126,453,3.126,454,3.126,455,2.671,456,2.671,457,3.126,458,3.126,459,3.126,460,3.126,461,2.671,462,4.449,463,3.126,464,3.126,465,3.126,466,3.126,467,5.18,468,4.449,469,1.968,470,3.126,471,2.371]],["title/classes/Car.html",[43,0.268,189,0.964]],["body/classes/Car.html",[2,0.253,3,0.253,4,0.221,6,0.253,13,1.171,16,0.021,18,0.462,30,0.724,42,0.253,43,0.439,53,1.086,66,0.017,67,0.017,70,0.831,76,1.266,79,2.211,189,1.878,399,3.888,472,4.074,473,3.534,474,4.589,475,6.994,476,4.589,477,4.768,478,3.71,479,4.768,480,4.768,481,2.974,482,4.768,483,4.768,484,4.074,485,4.074]],["title/components/CarRegistrationComponent.html",[84,0.38,188,0.964]],["body/components/CarRegistrationComponent.html",[2,0.117,3,0.117,4,0.102,6,0.117,7,0.696,9,0.473,10,1.278,11,1.537,13,1.115,15,0.529,16,0.022,17,0.858,18,0.405,19,0.398,20,1.482,27,0.984,28,2.394,30,0.582,32,0.33,39,0.734,42,0.117,43,0.164,44,0.918,45,0.658,52,1.583,53,1.531,54,1.728,55,1.433,56,0.869,66,0.01,67,0.01,70,0.482,76,0.984,79,1.719,84,0.638,85,0.59,86,0.775,87,0.775,88,0.775,90,1.142,91,1.619,96,1.327,97,0.734,98,2.04,99,1.919,101,1.081,103,1.081,113,1.498,115,1.873,116,1.433,123,1.623,131,1.619,132,4.645,143,0.694,144,0.734,145,1.402,147,1.619,151,0.82,155,0.734,178,0.694,179,1.207,180,0.969,181,1.673,182,0.775,183,1.19,184,0.775,185,0.775,186,0.623,187,0.775,188,1.272,189,1.97,190,0.775,191,0.59,192,0.775,193,0.59,194,0.775,195,0.59,196,0.775,197,0.623,198,0.775,199,0.59,200,0.775,201,0.59,202,0.775,203,0.623,204,0.775,205,0.623,206,0.775,207,0.59,208,0.775,209,0.59,210,0.775,211,0.59,212,0.775,213,0.59,214,0.734,215,0.59,216,0.734,217,0.775,227,3.423,268,1.728,338,4.537,372,2.152,377,1.482,399,3.164,401,2.271,430,0.977,456,2.921,469,2.152,473,1.728,474,3.734,476,3.254,486,5.645,487,1.876,488,2.593,489,2.348,490,3.734,491,3.419,492,3.419,493,4.738,494,4.048,495,4.048,496,4.738,497,4.048,498,4.738,499,4.738,500,4.738,501,4.738,502,4.738,503,4.738,504,3.419,505,4.048,506,2.348,507,2.196,508,3.419,509,2.921,510,2.196,511,2.921,512,2.348,513,2.593,514,2.196,515,3.419,516,4.738,517,2.196,518,3.593,519,2.196,520,3.419,521,2.593,522,2.15,523,2.196,524,2.921,525,3.419,526,2.196,527,2.196,528,1.989,529,2.196,530,4.738,531,3.419,532,3.419,533,2.921,534,2.196,535,3.419,536,2.196,537,3.419,538,3.419,539,2.196,540,2.196,541,0.92,542,1.04,543,1.666,544,3.419,545,4.198,546,2.196,547,2.196,548,3.419,549,2.921,550,2.196,551,2.196,552,2.196,553,2.196,554,2.196,555,3.419,556,2.196,557,2.196,558,2.196,559,3.419,560,3.419,561,2.196,562,2.196,563,1.508,564,2.196,565,2.196,566,3.419,567,2.196,568,3.419,569,2.196,570,2.196,571,2.196,572,3.419,573,2.196,574,2.196,575,2.196,576,2.593,577,2.593,578,3.419,579,3.419,580,3.419,581,3.419]],["title/interfaces/ContactInfo.html",[218,0.731,582,2.466]],["body/interfaces/ContactInfo.html",[2,0.38,3,0.266,4,0.232,6,0.266,16,0.021,18,0.481,42,0.266,52,2.027,66,0.017,67,0.017,70,0.855,76,1.281,79,2.066,218,1.235,222,4.602,473,3.575,478,3.82,582,4.167,583,3.793,584,3.793,585,3.82,586,6.069,587,6.069,588,3.531,589,6.069,590,6.069]],["title/interceptors/ErrorInterceptor.html",[242,2.261,591,2.466]],["body/interceptors/ErrorInterceptor.html",[2,0.223,3,0.223,4,0.195,6,0.223,7,1.107,9,0.905,12,4.01,13,0.928,15,1.31,16,0.022,17,0.985,18,0.366,19,0.985,27,1.156,29,3.265,30,0.847,31,1.31,32,0.633,33,2.124,34,3.592,36,3.188,37,2.124,42,0.223,43,0.313,44,1.129,45,1.259,46,1.662,54,2.75,63,3.592,66,0.016,67,0.016,142,2.446,219,3.737,229,3.426,231,3.713,239,2.646,242,3.426,243,3.188,277,3.422,283,2.274,322,4.84,324,2.446,377,1.484,398,3.592,591,2.887,592,4.204,593,5.156,594,3.592,595,4.204,596,3.592,597,5.452,598,3.511,599,4.204,600,3.592,601,4.649,602,5.442,603,4.204,604,4.204,605,4.204,606,3.188,607,4.204,608,4.204,609,6.035,610,4.204,611,4.204,612,4.204,613,4.204,614,4.204,615,4.204,616,4.204,617,4.204,618,4.204,619,3.592,620,3.592,621,4.204,622,4.204,623,4.204,624,4.204]],["title/components/FavoritesComponent.html",[84,0.38,191,0.964]],["body/components/FavoritesComponent.html",[2,0.202,3,0.202,4,0.176,6,0.202,7,1.037,9,1.237,13,0.98,16,0.021,17,1.041,27,0.689,30,0.468,32,0.573,42,0.202,43,0.284,44,1.369,53,1.161,56,1.296,66,0.015,67,0.015,70,0.718,84,0.677,85,1.022,86,1.344,87,1.344,88,1.344,90,1.271,96,1.817,97,1.271,98,2.191,99,2.069,101,1.612,103,1.612,113,1.941,115,2.015,123,1.203,143,2.189,144,1.271,145,1.271,178,1.203,179,1.799,180,1.445,181,2.167,182,1.344,183,1.079,184,1.344,185,1.344,186,1.079,187,1.344,188,1.022,189,1.022,190,1.344,191,1.648,192,1.344,193,1.022,194,1.344,195,1.022,196,1.344,197,1.079,198,1.344,199,1.022,200,1.344,201,1.022,202,1.344,203,1.079,204,1.344,205,1.079,206,1.344,207,1.022,208,1.344,209,1.022,210,1.344,211,1.022,212,1.344,213,1.022,214,1.271,215,1.022,216,1.271,217,1.344,240,3.208,389,3.865,625,3.251,626,5.097,627,2.576,628,5.097,629,3.865,630,4.695,631,3.208,632,5.097,633,5.097,634,3.946,635,5.097,636,3.806,637,3.5,638,3.208,639,4.695,640,5.097,641,5.097,642,2.269,643,3.5,644,3.251]],["title/injectables/GeocodeService.html",[31,0.864,645,2.724]],["body/injectables/GeocodeService.html",[2,0.214,3,0.214,4,0.187,6,0.214,7,1.277,9,1.272,13,1.07,15,1.273,16,0.022,17,0.958,18,0.397,19,0.958,27,1.18,29,3.745,30,0.65,31,1.422,32,0.606,37,2.034,40,2.533,41,2.034,42,0.214,43,0.3,52,1.767,66,0.018,67,0.015,70,0.746,71,2.63,76,1.07,120,1.906,131,1.906,224,4.212,239,3.33,385,3.078,430,1.791,563,2.764,620,3.438,645,4.011,646,3.438,647,7.206,648,5.29,649,5.29,650,5.29,651,4.024,652,5.29,653,5.909,654,4.024,655,5.29,656,6.276,657,4.024,658,5.29,659,5.29,660,5.29,661,5.29,662,5.29,663,5.29,664,5.29,665,5.29,666,5.29,667,4.024,668,5.29,669,4.024,670,3.052,671,3.438,672,4.024]],["title/components/HowToComponent.html",[84,0.38,193,0.964]],["body/components/HowToComponent.html",[2,0.3,3,0.095,4,0.083,9,0.386,16,0.02,17,0.949,18,0.196,19,0.901,30,0.22,32,0.27,42,0.095,43,0.134,44,0.781,50,1.295,52,1.411,54,1.47,55,1.22,56,0.74,57,4.665,66,0.008,67,0.016,71,2.43,79,1.336,84,0.492,85,0.481,86,0.633,87,0.633,88,0.633,90,0.599,91,1.378,96,1.161,97,0.599,98,1.968,99,1.848,101,0.92,103,0.92,113,0.567,119,2.902,120,1.378,122,1.832,126,1.574,131,2.747,136,1.15,137,2.902,138,2.459,142,2.459,143,2.042,147,2.357,175,2.207,178,0.567,179,1.027,180,0.825,181,1.492,182,0.633,183,0.508,184,0.633,185,0.633,186,0.508,187,0.633,188,0.481,189,1.652,190,0.633,191,0.481,192,0.633,193,1.135,194,0.633,195,0.481,196,0.633,197,0.508,198,0.633,199,0.481,200,0.633,201,0.481,202,0.633,203,0.508,204,0.633,205,0.508,206,0.633,207,0.481,208,0.633,209,0.481,210,0.633,211,0.481,212,0.633,213,0.481,214,2.055,215,0.481,216,0.599,217,0.633,222,3.205,223,1.998,227,3.437,256,3.177,268,1.47,283,2.286,304,1.231,372,2.66,375,2.207,384,4.103,385,3.374,399,1.693,401,3.582,408,1.998,474,2.902,476,2.902,528,3.793,542,3.212,543,4.588,576,3.205,577,2.207,585,3.437,598,3.632,627,2.93,638,3.437,673,1.532,674,1.532,675,2.486,676,3.61,677,2.91,678,2.91,679,2.91,680,2.91,681,3.61,682,4.588,683,5.937,684,2.902,685,3.61,686,2.486,687,2.486,688,4.226,689,4.954,690,3.132,691,2.91,692,4.226,693,6.708,694,4.588,695,2.91,696,2.486,697,3.132,698,2.486,699,2.486,700,4.226,701,2.486,702,2.91,703,5.168,704,6.708,705,5.799,706,4.251,707,2.895,708,2.91,709,2.91,710,1.998,711,2.91,712,2.91,713,4.226,714,4.954,715,4.734,716,2.91,717,5.46,718,2.91,719,2.486,720,2.486,721,2.486,722,2.91,723,2.91,724,1.832,725,2.486,726,5.168,727,2.91,728,2.486,729,4.226,730,6.05,731,2.486,732,2.91,733,4.976,734,2.91,735,2.91,736,3.61,737,4.976,738,2.486,739,2.91,740,2.91,741,4.226,742,2.486,743,1.693,744,1.998,745,4.226,746,2.91,747,3.205,748,1.832,749,3.61,750,2.91,751,2.91,752,2.91,753,3.61,754,1.793,755,2.486,756,2.91,757,3.417,758,4.976,759,2.91,760,2.486,761,1.793,762,2.91,763,2.91,764,4.226,765,2.91,766,4.226,767,1.998,768,2.91,769,1.793,770,4.226,771,2.91,772,3.75,773,2.91,774,4.226,775,2.66,776,2.91,777,2.91,778,2.91,779,2.486,780,1.998,781,2.91,782,2.207,783,2.91,784,2.91,785,2.91,786,2.91,787,1.532,788,1.793,789,1.793,790,2.91,791,1.793,792,1.793]],["title/interceptors/JwtInterceptor.html",[278,2.466,591,2.466]],["body/interceptors/JwtInterceptor.html",[2,0.248,3,0.248,4,0.216,6,0.248,7,1.183,9,1.005,13,0.992,15,1.4,16,0.022,17,1.053,18,0.391,19,1.053,27,1.053,29,3.428,30,0.815,31,1.4,32,0.702,37,2.359,42,0.248,43,0.348,44,1.254,45,1.398,66,0.017,67,0.017,229,3.989,278,3.994,322,5.03,324,2.716,377,1.648,396,4.38,403,3.989,430,2.078,591,3.206,593,5.413,596,3.988,597,5.666,598,3.687,600,3.988,601,4.969,793,4.668,794,4.668,795,4.668,796,4.668,797,4.668,798,4.668,799,4.668,800,4.668,801,4.668,802,4.668,803,4.668]],["title/components/LandingComponent.html",[84,0.38,195,0.964]],["body/components/LandingComponent.html",[2,0.139,3,0.139,4,0.121,6,0.139,7,0.793,9,0.561,10,1.517,11,1.66,12,1.517,13,0.945,15,0.628,16,0.022,17,0.938,18,0.314,19,0.472,20,1.648,27,0.706,28,2.358,30,0.636,32,0.392,33,1.318,39,0.871,42,0.139,43,0.194,44,1.047,45,0.781,53,1.51,54,1.97,55,2.17,56,0.991,58,3.33,65,1.517,66,0.011,67,0.011,70,0.549,84,0.693,85,0.7,86,0.92,87,0.92,88,0.92,90,1.302,91,1.846,96,1.476,97,0.871,98,2.094,99,2.022,101,1.232,103,1.232,113,1.637,116,2.438,117,2.956,123,1.232,125,3.33,128,2.453,136,1.541,139,1.846,143,0.824,151,0.974,155,0.871,158,2.047,172,3.33,173,2.268,174,3.33,178,0.824,179,1.376,180,1.105,181,1.828,182,0.92,183,0.739,184,0.92,185,0.92,186,0.739,187,0.92,188,0.7,189,0.7,190,0.92,191,0.7,192,0.92,193,0.7,194,0.92,195,1.391,196,0.92,197,0.739,198,0.92,199,0.7,200,0.92,201,0.7,202,0.92,203,0.739,204,0.92,205,0.739,206,0.92,207,0.7,208,0.92,209,0.7,210,0.92,211,0.7,212,0.92,213,0.7,214,0.871,215,0.7,216,0.871,217,0.92,372,2.453,376,5.294,382,3.556,401,2.802,403,2.453,488,2.956,489,2.676,521,2.956,522,1.031,524,3.33,541,1.093,542,3.255,598,2.268,637,2.676,638,2.453,642,1.16,643,2.676,681,5.294,683,4.424,684,3.556,707,3.013,710,3.556,726,3.33,728,3.33,744,2.676,747,4.7,748,3.26,772,2.676,782,2.956,804,2.228,805,3.898,806,3.898,807,3.898,808,3.898,809,3.898,810,2.305,811,4.969,812,4.424,813,3.898,814,2.607,815,2.607,816,2.607,817,3.898,818,3.898,819,2.956,820,1.846,821,1.791,822,2.228,823,1.977,824,3.33,825,5.511,826,4.969,827,5.179,828,3.49,829,2.956,830,3.33,831,5.179,832,5.179,833,3.898,834,2.607,835,3.898,836,4.424,837,3.33,838,3.33,839,3.898,840,3.898,841,3.33,842,3.898,843,3.898,844,2.607,845,5.179,846,3.898,847,3.898,848,2.607,849,2.607]],["title/components/LikesComponent.html",[84,0.38,197,1.018]],["body/components/LikesComponent.html",[2,0.161,3,0.161,4,0.141,6,0.161,7,0.886,9,0.653,11,1.667,13,0.949,15,0.73,16,0.022,17,1.008,18,0.342,19,0.549,20,1.965,27,0.549,30,0.777,32,0.456,39,1.454,42,0.161,43,0.226,44,1.169,45,0.908,46,1.199,50,2.478,52,1.859,53,1.541,56,1.107,66,0.012,67,0.016,70,0.614,84,0.716,85,0.815,86,1.071,87,1.071,88,1.071,90,1.454,96,1.611,97,1.013,98,2.136,99,2.015,101,1.377,103,1.377,113,1.76,115,1.722,116,1.825,123,0.959,128,2.741,136,1.722,139,2.636,143,0.959,144,1.013,145,1.013,147,2.062,151,1.133,155,1.454,158,2.426,178,0.959,179,1.537,180,1.235,181,1.965,182,1.071,183,0.86,184,1.071,185,1.071,186,0.86,187,1.071,188,0.815,189,0.815,190,1.071,191,0.815,192,1.071,193,0.815,194,1.071,195,0.815,196,1.071,197,1.578,198,1.071,199,0.815,200,1.071,201,0.815,202,1.071,203,0.86,204,1.071,205,0.86,206,1.071,207,0.815,208,1.071,209,0.815,210,1.071,211,0.815,212,1.071,213,0.815,214,1.013,215,0.815,216,1.013,217,1.071,233,2.813,280,2.333,318,1.641,371,3.72,377,1.071,429,1.533,430,1.938,481,1.938,522,1.199,541,1.271,542,2.906,588,2.534,627,3.268,630,2.99,639,2.99,642,1.35,767,2.99,810,2.478,820,1.437,828,2.356,850,2.591,851,4.355,852,4.355,853,4.756,854,2.083,855,4.355,856,3.302,857,2.964,858,3.033,859,2.534,860,3.302,861,3.033,862,3.711,863,3.302,864,2.591,865,1.437,866,1.641,867,1.641,868,2.534,869,2.3,870,2.534,871,2.3,872,2.964,873,2.083,874,2.083,875,1.765,876,1.765,877,2.3,878,2.591,879,4.355,880,4.355]],["title/components/LikesmatchwebComponent.html",[84,0.38,199,0.964]],["body/components/LikesmatchwebComponent.html",[2,0.196,3,0.129,4,0.112,6,0.129,7,0.751,9,0.522,11,1.494,13,0.964,15,1.075,16,0.022,17,1.024,18,0.361,19,0.809,20,1.762,23,1.225,27,0.809,30,0.722,32,0.365,39,1.232,42,0.196,43,0.181,44,0.991,45,0.726,46,0.958,50,2.222,52,1.667,53,1.557,55,1.016,56,0.938,66,0.011,67,0.014,70,0.52,76,0.668,84,0.681,85,0.651,86,0.856,87,0.856,88,0.856,90,1.232,96,1.412,97,0.81,98,2.072,99,1.951,101,1.166,103,1.166,113,1.578,115,1.973,116,1.546,123,1.412,128,2.322,136,1.459,139,2.544,143,0.766,144,0.81,145,0.81,147,1.747,151,0.905,155,1.232,158,2.325,178,0.766,179,1.302,180,1.046,181,1.762,182,0.856,183,0.687,184,0.856,185,0.856,186,0.687,187,0.856,188,0.651,189,0.651,190,0.856,191,0.651,192,0.856,193,0.651,194,0.856,195,0.651,196,0.856,197,0.687,198,0.856,199,1.34,200,0.856,201,0.651,202,0.856,203,0.687,204,0.856,205,0.687,206,0.856,207,0.651,208,0.856,209,0.651,210,0.856,211,0.651,212,0.856,213,0.651,214,0.81,215,0.651,216,0.81,217,0.856,218,0.493,224,1.526,233,2.522,280,2.092,318,1.312,332,1.996,377,0.856,388,3.049,429,1.225,430,1.642,481,1.642,522,0.958,541,1.016,542,2.785,588,2.147,627,3.138,631,2.322,639,2.533,707,1.411,724,2.322,743,3.422,767,2.533,810,2.39,820,1.148,828,1.996,854,1.665,856,2.798,857,2.598,859,2.147,860,2.798,863,3.387,865,1.148,866,1.312,867,1.312,868,2.147,869,1.839,870,2.147,871,1.839,872,2.598,875,3.422,876,1.411,881,1.839,882,3.152,883,3.152,884,3.152,885,4.264,886,3.152,887,3.152,888,3.689,889,2.533,890,2.424,891,2.533,892,2.533,893,3.428,894,3.428,895,2.147,896,3.428,897,2.533,898,2.424,899,2.533,900,2.424,901,2.424,902,3.381,903,2.322,904,1.526,905,1.411,906,2.071,907,2.071,908,1.665,909,2.533,910,3.142,911,1.665,912,2.533,913,2.533,914,1.665,915,4.162,916,1.665,917,2.071,918,2.071,919,2.071,920,2.071,921,2.071,922,1.839,923,1.839,924,2.071,925,2.071,926,1.526,927,2.071,928,4.162,929,4.264,930,4.264,931,4.264,932,3.152,933,3.152,934,2.533,935,3.152]],["title/interfaces/Location.html",[120,1.701,218,0.731]],["body/interfaces/Location.html",[2,0.289,3,0.289,4,0.252,6,0.289,16,0.021,18,0.429,42,0.289,66,0.018,67,0.018,70,0.899,79,2.28,120,3.02,218,1.297,936,4.643,937,5.965,938,5.965]],["title/components/LoginComponent.html",[84,0.38,201,0.964]],["body/components/LoginComponent.html",[2,0.153,3,0.153,4,0.133,6,0.153,7,0.852,9,0.619,11,1.728,12,3.357,13,1.027,15,1.189,16,0.022,17,0.983,18,0.365,19,0.52,20,1.916,26,2.416,27,0.894,30,0.709,31,1.008,32,0.432,33,1.452,39,0.96,42,0.153,43,0.214,44,1.124,45,0.86,46,1.655,53,1.598,54,3.044,56,1.065,66,0.012,67,0.012,70,0.59,76,1.126,84,0.611,85,0.772,86,1.014,87,1.014,88,1.014,90,1.398,96,1.562,97,0.96,98,2.121,99,2,101,1.324,103,1.324,113,1.716,115,1.655,116,2.275,123,1.324,136,1.655,143,0.908,144,1.398,151,1.073,155,1.65,178,0.908,179,1.478,180,1.187,181,1.916,182,1.014,183,0.815,184,1.014,185,1.014,186,0.815,187,1.014,188,0.772,189,0.772,190,1.014,191,0.772,192,1.014,193,0.772,194,1.014,195,0.772,196,1.014,197,0.815,198,1.014,199,0.772,200,1.014,201,1.458,202,1.014,203,0.815,204,1.014,205,0.815,206,1.014,207,0.772,208,1.014,209,0.772,210,1.014,211,0.772,212,1.014,213,0.772,214,0.96,215,0.772,216,0.96,217,1.014,223,3.727,227,3.417,231,2.436,240,4.011,245,3.577,256,3.504,268,2.116,277,3.22,382,3.727,384,4.258,394,3.175,412,3.577,469,2.636,489,2.875,522,1.136,528,2.436,541,1.204,563,2.875,594,2.455,606,2.179,637,2.875,638,2.636,676,3.577,682,3.175,697,2.636,757,2.875,810,2.416,823,2.179,826,4.637,939,2.455,940,4.187,941,6.023,942,4.187,943,4.187,944,5.428,945,5.428,946,4.187,947,4.187,948,3.577,949,3.577,950,4.187,951,2.873,952,3.577,953,4.187,954,2.873,955,4.187,956,2.873,957,2.873,958,4.187,959,2.873,960,2.873,961,2.873,962,2.873,963,2.873,964,4.187]],["title/injectables/MapsControllerService.html",[31,0.864,279,2.261]],["body/injectables/MapsControllerService.html",[2,0.201,3,0.201,4,0.175,6,0.201,7,1.033,9,0.814,13,0.977,15,1.379,16,0.022,17,1.037,18,0.385,19,1.037,26,1.683,27,1.19,29,3.455,30,0.808,31,1.379,32,0.569,37,1.911,42,0.201,43,0.282,45,1.132,52,2.045,55,2.127,66,0.015,67,0.015,71,3.11,76,1.306,90,1.263,120,3.025,138,3.716,155,2.045,173,2.953,237,3.486,250,4.336,279,3.195,310,2.597,321,4.205,324,2.201,372,3.195,385,3.826,395,2.868,414,2.868,416,2.381,417,2.868,509,4.336,629,3.849,634,4.386,684,3.934,743,2.953,748,3.195,780,3.486,937,5.231,938,5.231,965,5.231,966,2.868,967,5.076,968,5.076,969,3.231,970,5.076,971,3.782,972,5.076,973,5.729,974,3.486,975,5.076,976,3.782,977,4.336,978,5.076,979,5.076,980,3.849,981,2.597,982,3.782,983,3.231,984,4.336]],["title/interfaces/Marker.html",[218,0.731,974,2.466]],["body/interfaces/Marker.html",[2,0.256,3,0.256,4,0.223,6,0.256,16,0.021,18,0.471,19,1.317,28,3.479,42,0.256,66,0.017,67,0.017,70,0.836,71,2.984,76,1.324,79,2.031,120,3.176,218,1.206,402,3.652,549,5.728,974,4.072,985,4.114,986,6.705,987,6.705,988,6.705,989,6.425,990,4.815,991,4.815,992,4.815]],["title/injectables/MatchingControllerService.html",[31,0.864,280,1.505]],["body/injectables/MatchingControllerService.html",[2,0.139,3,0.139,4,0.121,6,0.139,7,0.795,9,0.564,13,1.081,15,1.527,16,0.022,17,1.148,18,0.426,19,1.148,27,1.299,29,3.745,30,0.716,31,1.126,32,0.394,37,1.323,42,0.139,43,0.195,45,0.784,53,1.639,66,0.011,67,0.015,76,0.708,79,2.303,155,2.217,230,2.965,233,1.976,234,5.301,237,2.685,280,1.639,321,3.564,324,1.524,375,3.936,395,1.986,414,1.986,415,2.237,416,1.648,417,1.986,473,3.661,478,2.461,481,2.874,512,4.261,542,1.852,627,3.423,699,4.977,775,3.267,828,2.115,867,1.417,966,1.986,969,2.237,984,2.237,993,5.517,994,3.91,995,3.91,996,3.91,997,3.91,998,3.91,999,3.91,1000,3.91,1001,3.91,1002,3.91,1003,6.878,1004,2.619,1005,3.91,1006,6.773,1007,3.91,1008,2.619,1009,3.91,1010,2.619,1011,3.91,1012,3.91,1013,3.91,1014,3.91,1015,4.679,1016,3.91,1017,2.619,1018,3.91,1019,2.619,1020,3.91,1021,3.91,1022,2.619,1023,3.91,1024,2.619,1025,5.19,1026,3.91,1027,2.619,1028,4.679,1029,2.619,1030,2.619,1031,3.91,1032,3.91,1033,3.91,1034,3.91,1035,2.619,1036,3.91]],["title/components/NavbarComponent.html",[84,0.38,205,1.018]],["body/components/NavbarComponent.html",[2,0.13,3,0.13,4,0.113,6,0.13,7,0.754,9,0.798,10,1.419,11,1.612,12,3.133,13,1.005,15,0.587,16,0.022,17,0.906,18,0.249,19,0.442,20,1.582,26,2.228,27,0.906,30,0.662,32,0.367,33,1.232,39,0.815,42,0.13,43,0.182,44,0.995,46,1.772,52,1.672,53,1.622,54,3.303,55,2.098,56,0.942,65,2.156,66,0.011,67,0.011,70,0.522,84,0.724,85,0.655,86,0.861,87,0.861,88,0.861,90,1.238,91,2.876,96,1.417,97,0.815,98,2.074,99,1.974,101,1.172,103,1.172,113,1.583,115,2.507,116,2.376,117,2.811,122,2.333,123,1.417,136,2.242,139,1.755,143,0.771,144,0.815,145,0.815,151,0.911,155,1.497,158,2.401,178,0.771,179,1.308,180,1.051,181,1.767,182,0.861,183,0.692,184,0.861,185,0.861,186,0.692,187,0.861,188,0.655,189,1.204,190,0.861,191,0.655,192,0.861,193,0.655,194,0.861,195,0.655,196,0.861,197,0.692,198,0.861,199,0.655,200,0.861,201,0.655,202,0.861,203,0.692,204,0.861,205,1.42,206,0.861,207,0.655,208,0.861,209,0.655,210,0.861,211,0.655,212,0.861,213,0.655,214,0.815,215,0.655,216,0.815,217,0.861,224,2.333,277,3.143,283,2.709,382,1.675,384,3.152,385,2.156,389,2.811,391,4.3,394,2.811,429,1.873,455,3.166,471,1.85,522,1.772,541,1.022,543,2.811,606,1.85,629,3.797,638,2.333,642,1.649,643,2.545,687,3.166,757,2.545,772,2.545,782,2.811,810,2.228,811,5.418,812,4.277,819,2.811,820,2.371,821,2.545,822,2.084,823,3.399,824,3.166,949,3.166,1037,2.084,1038,3.706,1039,3.706,1040,3.706,1041,5.385,1042,4.482,1043,3.706,1044,3.706,1045,2.545,1046,3.706,1047,3.706,1048,3.166,1049,3.706,1050,2.439,1051,2.439,1052,3.706,1053,3.706,1054,3.706,1055,3.166,1056,3.706,1057,2.439,1058,2.439,1059,3.706,1060,2.439,1061,3.706,1062,2.439,1063,2.439,1064,3.706,1065,2.439,1066,2.439,1067,2.439,1068,2.439,1069,3.706]],["title/interfaces/Office.html",[126,1.943,218,0.731]],["body/interfaces/Office.html",[2,0.27,3,0.27,4,0.236,6,0.27,16,0.021,17,1.286,18,0.442,42,0.27,66,0.018,67,0.018,70,0.864,71,3.04,76,1.286,79,2.08,126,3.842,218,1.247,473,3.589,478,3.858,1070,4.344,1071,6.129,1072,6.129,1073,6.129]],["title/directives/PlacesAutocompleteDirective.html",[56,0.913,215,0.964]],["body/directives/PlacesAutocompleteDirective.html",[2,0.224,3,0.224,4,0.196,6,0.224,7,1.11,9,0.908,13,1.128,15,1.313,16,0.022,17,0.988,18,0.406,19,0.988,27,1.094,30,0.743,32,0.635,42,0.224,43,0.314,44,1.465,45,1.263,46,2.526,56,1.537,66,0.016,67,0.016,70,0.769,96,1.911,97,1.409,98,1.633,113,2.02,123,1.334,131,2.583,180,1.812,215,1.465,216,1.822,261,3.604,310,2.897,326,5.14,351,4.66,377,1.925,1074,5.791,1075,3.604,1076,5.454,1077,6.39,1078,6.045,1079,4.218,1080,5.459,1081,6.898,1082,5.454,1083,5.454,1084,6.39,1085,5.454,1086,4.218,1087,4.218,1088,6.045,1089,4.218,1090,3.604,1091,4.218,1092,4.218,1093,4.218,1094,4.218,1095,4.218,1096,4.218,1097,4.218,1098,4.218]],["title/interfaces/Register.html",[218,0.731,528,2.09]],["body/interfaces/Register.html",[2,0.283,3,0.283,4,0.247,6,0.283,16,0.021,18,0.451,42,0.283,66,0.018,67,0.018,70,0.888,76,1.331,218,1.282,256,4.036,403,4.367,528,3.667,697,4.367,1099,4.552]],["title/components/RideswipeComponent.html",[84,0.38,207,0.964]],["body/components/RideswipeComponent.html",[2,0.22,3,0.22,4,0.192,6,0.22,7,1.097,9,1.291,13,1.022,16,0.021,17,1.085,27,0.751,30,0.509,32,0.624,42,0.22,43,0.309,44,1.449,56,1.372,66,0.015,67,0.015,70,0.76,84,0.697,85,1.114,86,1.464,87,1.464,88,1.464,96,1.896,97,1.385,98,2.21,99,2.088,101,1.706,103,1.706,113,2.007,123,1.311,143,1.311,144,1.385,145,1.385,178,1.311,179,1.904,180,1.53,181,2.241,182,1.464,183,1.176,184,1.464,185,1.464,186,1.176,187,1.464,188,1.114,189,1.114,190,1.464,191,1.114,192,1.464,193,1.114,194,1.464,195,1.114,196,1.464,197,1.176,198,1.464,199,1.114,200,1.464,201,1.114,202,1.464,203,1.176,204,1.464,205,1.176,206,1.464,207,1.705,208,1.464,209,1.114,210,1.464,211,1.114,212,1.464,213,1.114,214,1.385,215,1.114,216,1.385,217,1.464,387,4.608,630,4.36,634,4.117,642,2.401,644,3.543,1100,3.543,1101,5.394,1102,5.394,1103,5.394,1104,4.147]],["title/interfaces/RouteInfo.html",[218,0.731,981,2.466]],["body/interfaces/RouteInfo.html",[2,0.275,3,0.275,4,0.24,6,0.275,16,0.021,18,0.416,26,3.057,42,0.275,66,0.018,67,0.018,70,0.873,79,2.254,218,1.26,584,3.921,780,4.896,980,4.695,981,4.252,1105,4.417,1106,5.869,1107,6.87,1108,6.191,1109,6.191]],["title/classes/SwipecardModel.html",[43,0.268,862,2.261]],["body/classes/SwipecardModel.html",[2,0.282,3,0.282,4,0.246,6,0.282,13,1.073,16,0.021,18,0.357,30,0.653,42,0.282,43,0.469,53,1.663,66,0.018,67,0.018,70,0.887,144,1.776,145,1.776,484,4.542,642,2.802,862,3.962,877,5.257,1110,4.542,1111,5.316,1112,5.316]],["title/injectables/TokenStorage.html",[31,0.864,396,2.261]],["body/injectables/TokenStorage.html",[2,0.256,3,0.256,4,0.223,6,0.256,7,1.206,9,1.383,13,1.143,15,1.159,16,0.021,17,0.872,18,0.324,19,0.872,27,1.214,30,0.592,31,1.546,32,0.725,40,3.031,41,2.433,42,0.256,43,0.359,66,0.017,67,0.017,76,1.247,123,1.875,377,1.7,396,3.732,403,3.732,471,3.652,634,4.814,1113,3.652,1114,6.705,1115,5.929,1116,6.705,1117,4.815,1118,4.815,1119,5.929,1120,4.815,1121,4.815,1122,3.652,1123,4.114,1124,5.929,1125,4.815,1126,4.815]],["title/injectables/UploadService.html",[31,0.864,1127,2.724]],["body/injectables/UploadService.html",[2,0.215,3,0.215,4,0.303,6,0.215,7,1.081,9,1.276,13,1.114,15,0.975,16,0.022,17,0.962,18,0.357,19,0.733,27,1.237,30,0.653,31,1.427,32,0.61,40,2.55,41,2.047,42,0.215,43,0.302,48,4.772,65,2.357,66,0.015,67,0.015,70,0.749,76,0.962,79,1.281,91,1.919,122,2.55,131,1.919,144,1.353,145,1.353,155,1.353,158,2.1,231,2.357,377,1.875,489,2.782,563,2.782,642,1.803,670,3.072,922,3.072,923,4.029,1127,4.029,1128,3.461,1129,6.292,1130,6.292,1131,5.312,1132,5.312,1133,4.051,1134,5.312,1135,4.051,1136,5.928,1137,6.292,1138,4.051,1139,3.461,1140,4.051,1141,5.928,1142,4.051,1143,4.051,1144,4.051,1145,4.051,1146,4.051,1147,2.357,1148,4.051,1149,4.051,1150,4.051,1151,4.051,1152,4.051,1153,4.051,1154,4.051,1155,4.051,1156,4.051,1157,4.051,1158,5.928,1159,4.051,1160,5.312,1161,4.051,1162,4.051,1163,4.051,1164,5.312,1165,6.292,1166,4.051,1167,4.051,1168,4.051,1169,4.051]],["title/interfaces/User.html",[53,0.818,218,0.731]],["body/interfaces/User.html",[2,0.191,3,0.191,4,0.166,6,0.191,16,0.022,18,0.476,19,0.887,28,2.818,30,0.771,42,0.191,48,3.715,50,2.18,53,1.365,66,0.014,67,0.014,70,0.69,71,2.881,76,1.313,79,1.763,105,4.544,119,3.364,126,3.585,136,1.937,137,3.364,138,2.85,158,1.937,189,1.684,214,1.636,218,0.996,230,3.715,249,4.185,401,2.65,408,4.115,469,3.083,473,3.271,478,3.083,481,3.079,485,3.066,521,3.715,582,4.307,585,3.511,588,4.148,643,3.364,682,3.715,686,4.185,697,3.511,779,4.185,865,3.277,983,3.066,1170,3.066,1171,6.474,1172,5.119,1173,5.119,1174,5.992,1175,6.474,1176,4.898,1177,4.898,1178,4.898,1179,4.898,1180,4.898,1181,3.588,1182,3.588,1183,3.588]],["title/interfaces/UserCard.html",[218,0.731,388,1.701]],["body/interfaces/UserCard.html",[2,0.275,3,0.166,4,0.145,6,0.166,11,1.332,16,0.022,18,0.348,20,1.571,23,1.58,30,0.783,32,0.47,39,1.486,42,0.236,43,0.233,44,0.839,45,0.936,46,1.236,50,1.98,52,1.486,53,1.617,55,1.865,66,0.013,67,0.015,70,0.627,76,1.122,84,0.631,90,1.044,96,1.407,98,0.936,99,0.886,101,0.988,103,0.988,113,0.988,115,1.759,116,1.31,128,1.968,136,1.236,139,2.673,147,1.481,151,1.167,155,1.486,158,2.45,199,0.839,218,0.905,224,2.801,233,2.248,280,1.865,318,1.691,332,2.407,377,1.104,388,2.936,429,1.58,430,1.98,481,1.98,522,1.236,541,1.31,542,2.825,588,1.819,627,3.014,631,1.968,639,2.147,707,2.589,724,3.754,743,3.711,767,2.147,810,1.98,820,1.481,828,1.691,856,2.371,857,2.589,859,1.819,860,2.371,863,3.928,865,1.481,866,1.691,867,1.691,868,2.589,869,2.371,870,2.589,871,2.371,872,3.014,875,3.014,876,1.819,881,2.371,882,2.671,883,2.671,884,2.671,885,2.671,889,2.147,891,2.147,892,2.147,893,3.055,894,3.055,895,1.819,896,4.256,897,2.147,899,2.147,902,3.754,903,2.801,904,1.968,905,1.819,906,3.801,907,3.801,908,2.147,909,3.055,910,3.553,911,2.147,912,3.055,913,3.055,914,2.147,915,4.476,916,2.147,917,2.671,918,2.671,919,2.671,920,2.671,921,2.671,922,2.371,923,2.371,924,2.671,925,2.671,926,1.968,927,2.671,928,4.476]],["title/interfaces/UserCard-1.html",[218,0.61,388,1.42,1147,1.745]],["body/interfaces/UserCard-1.html",[2,0.151,3,0.151,4,0.132,6,0.221,11,1.47,16,0.022,18,0.33,20,1.467,23,1.437,30,0.761,31,0.684,32,0.428,39,1.388,42,0.151,43,0.212,44,0.764,45,0.851,46,1.124,50,1.265,52,1.388,53,1.611,66,0.012,67,0.017,70,0.586,76,1.087,79,1.708,84,0.572,91,1.347,96,1.314,98,0.851,99,0.806,101,0.899,103,0.899,113,0.899,115,2.135,116,1.742,136,1.941,139,1.347,142,1.654,143,1.553,147,1.347,151,1.062,155,2.004,158,2.272,173,2.418,180,0.806,211,0.764,218,0.845,233,2.1,280,2.058,318,1.538,332,2.248,377,1.004,388,3.009,429,1.437,430,1.849,481,1.849,490,1.953,506,1.953,513,3.151,518,2.156,522,1.941,541,1.192,627,1.437,631,1.79,690,1.79,715,2.156,724,3.617,743,3.606,748,1.79,775,3.091,810,1.265,820,1.347,857,2.418,859,1.654,865,1.347,866,1.538,867,1.538,868,2.418,870,2.857,872,2.857,873,1.953,874,1.953,875,3.697,876,1.654,889,1.953,891,1.953,892,1.953,893,2.853,894,2.853,895,1.654,896,4.121,897,1.953,899,1.953,902,3.617,903,2.616,904,1.79,905,1.654,908,1.953,909,2.853,910,3.4,911,1.953,912,2.853,913,2.853,914,1.953,915,4.363,916,1.953,926,2.616,928,4.363,1045,2.853,1147,2.857,1184,2.156,1185,2.429,1186,2.429,1187,2.429,1188,2.156,1189,2.156,1190,2.156,1191,2.156,1192,2.429,1193,2.156,1194,2.156,1195,2.429,1196,2.429,1197,2.429,1198,4.551,1199,2.429,1200,2.429,1201,2.156,1202,2.429,1203,4.614,1204,3.151,1205,5.127,1206,2.156,1207,3.151,1208,2.156,1209,2.429]],["title/components/UsercardComponent.html",[84,0.38,209,0.964]],["body/components/UsercardComponent.html",[2,0.248,3,0.096,4,0.172,6,0.197,7,0.598,9,0.391,11,1.4,13,1.093,15,0.891,16,0.022,17,0.993,18,0.408,19,0.671,20,1.503,23,1.871,27,0.847,28,1.871,30,0.696,31,0.707,32,0.273,39,0.982,42,0.096,43,0.135,44,0.789,45,0.544,46,0.718,50,1.308,52,1.422,53,1.547,56,0.747,66,0.008,67,0.016,68,1.247,70,0.414,76,0.906,79,0.929,84,0.6,85,0.488,86,0.641,87,0.641,88,0.641,90,0.982,91,1.392,96,1.171,97,0.606,98,1.972,99,1.853,101,0.929,103,0.929,113,1.346,115,1.849,116,1.784,120,1.392,123,1.478,127,3.164,136,2.241,139,1.392,142,2.477,143,1.666,144,1.76,145,1.76,147,2.016,151,0.678,155,1.237,158,1.978,178,0.574,179,1.038,180,1.494,181,1.503,182,0.641,183,0.515,184,0.641,185,0.641,186,0.515,187,0.641,188,0.488,189,0.994,190,0.641,191,0.488,192,0.641,193,0.488,194,0.641,195,0.488,196,0.641,197,0.515,198,0.641,199,0.488,200,0.641,201,0.488,202,0.641,203,0.515,204,0.641,205,0.515,206,0.641,207,0.488,208,0.641,209,1.143,210,0.641,211,0.488,212,0.641,213,0.488,214,0.606,215,0.488,216,0.606,217,0.641,233,1.485,280,1.96,318,0.982,332,3.067,377,0.641,388,1.392,429,0.917,430,1.308,481,1.895,490,2.018,506,2.018,512,2.018,522,2.169,541,0.761,585,2.68,598,1.056,630,2.018,642,0.808,689,1.551,690,1.143,710,2.018,725,1.551,744,1.247,747,2.229,749,3.164,760,2.511,780,2.923,810,1.895,820,0.86,821,1.247,825,2.511,853,4.275,854,1.247,857,2.155,859,1.71,862,3.453,864,1.551,865,0.86,866,0.982,867,0.982,868,1.71,870,2.155,872,2.155,873,1.247,874,1.247,875,2.477,876,1.056,877,1.377,878,1.551,902,3.15,903,1.85,904,2.331,905,1.056,910,2.943,934,2.018,1045,2.923,1080,4.501,1106,2.511,1147,2.477,1188,2.229,1189,2.229,1190,1.377,1191,1.377,1193,4.809,1194,1.377,1204,1.377,1206,1.377,1207,1.377,1208,1.377,1210,1.551,1211,2.939,1212,2.939,1213,4.257,1214,4.257,1215,4.257,1216,4.257,1217,4.257,1218,4.257,1219,4.257,1220,4.257,1221,2.939,1222,3.704,1223,2.939,1224,2.939,1225,1.816,1226,4.676,1227,2.511,1228,1.816,1229,2.939,1230,1.816,1231,5.269,1232,3.704,1233,1.816,1234,2.939,1235,1.816,1236,3.704,1237,4.257,1238,1.816,1239,3.637,1240,4.257,1241,1.816,1242,1.816,1243,1.816,1244,1.816,1245,5.269,1246,2.939,1247,5.269,1248,2.939,1249,1.816,1250,2.939,1251,2.939,1252,3.704,1253,4.257,1254,4.257,1255,2.939,1256,1.816,1257,2.939,1258,1.816,1259,3.704,1260,1.816,1261,2.939,1262,2.939,1263,1.816,1264,1.816,1265,1.816,1266,1.816,1267,1.816,1268,1.816,1269,1.816,1270,1.816,1271,1.816,1272,2.939,1273,1.816,1274,1.816,1275,1.816,1276,2.939,1277,1.816,1278,1.816,1279,1.816,1280,1.816,1281,1.816,1282,1.816,1283,1.816,1284,1.816,1285,1.816,1286,1.816,1287,1.816,1288,2.939,1289,1.816,1290,1.816,1291,1.816,1292,1.816,1293,1.816,1294,2.939,1295,5.004,1296,2.939,1297,1.816,1298,4.257,1299,1.816,1300,1.816,1301,1.816,1302,1.816,1303,4.257,1304,4.257,1305,2.939,1306,1.816,1307,2.939,1308,1.816]],["title/components/UsermatchwebComponent.html",[84,0.38,211,0.964]],["body/components/UsermatchwebComponent.html",[2,0.114,3,0.114,4,0.099,6,0.219,7,0.682,9,0.461,11,1.519,13,0.959,15,1.125,16,0.022,17,1.018,18,0.362,19,0.846,20,1.65,23,1.082,27,0.846,30,0.691,31,0.807,32,0.322,39,1.119,42,0.114,43,0.16,44,0.9,45,0.641,46,0.846,50,1.492,52,1.561,53,1.612,56,0.852,66,0.01,67,0.018,70,0.472,76,0.607,79,1.84,84,0.633,85,0.575,86,0.756,87,0.756,88,0.756,90,1.694,91,1.587,96,1.306,97,0.715,98,2.031,99,1.911,101,1.06,103,1.06,113,1.477,115,2.223,116,1.958,123,1.477,136,2.005,139,1.587,142,1.95,143,1.778,144,0.715,145,0.715,147,1.587,151,0.799,155,1.797,158,2.005,173,1.95,178,0.677,179,1.183,180,1.171,181,1.65,182,0.756,183,0.607,184,0.756,185,0.756,186,0.607,187,0.756,188,0.575,189,0.575,190,0.756,191,0.575,192,0.756,193,0.575,194,0.756,195,0.575,196,0.756,197,0.607,198,0.756,199,0.575,200,0.756,201,0.575,202,0.756,203,0.607,204,0.756,205,0.607,206,0.756,207,0.575,208,0.756,209,0.575,210,0.756,211,1.255,212,0.756,213,0.575,214,0.715,215,0.575,216,0.715,217,0.756,218,0.435,233,1.694,280,2.126,318,1.158,332,1.813,377,0.756,388,3.044,429,1.082,430,1.492,433,2.542,481,1.492,490,2.301,506,2.301,513,3.544,518,1.623,522,1.633,541,0.897,627,1.082,631,2.11,690,1.347,715,3.544,724,2.11,743,3.272,748,2.11,775,2.6,810,2.08,820,1.014,854,1.47,857,2.403,859,1.95,865,1.014,866,1.158,867,1.158,868,1.95,870,2.403,872,2.403,873,1.47,874,1.47,875,3.785,876,1.245,886,2.863,887,2.863,889,2.301,891,2.301,892,2.301,893,3.209,894,3.209,895,1.95,896,3.209,897,2.301,899,2.301,902,3.193,903,2.11,904,1.347,905,1.245,908,1.47,909,2.301,910,2.941,911,1.47,912,2.301,913,2.301,914,1.47,915,3.997,916,1.47,926,2.11,928,3.997,929,3.992,930,3.992,931,2.863,932,3.992,933,2.863,934,2.301,935,2.863,1045,3.209,1147,2.403,1184,1.623,1185,2.863,1186,2.863,1187,2.863,1188,1.623,1189,2.542,1190,1.623,1191,1.623,1192,1.829,1193,1.623,1194,1.623,1195,2.863,1196,2.863,1197,2.863,1198,4.414,1199,2.863,1200,2.863,1201,1.623,1202,1.829,1203,3.992,1204,2.542,1205,4.596,1206,1.623,1207,2.542,1208,1.623,1209,1.829,1309,3.351,1310,2.141,1311,2.141,1312,2.141,1313,2.141,1314,2.141,1315,3.351]],["title/components/ViewProfileComponent.html",[84,0.38,213,0.964]],["body/components/ViewProfileComponent.html",[2,0.277,3,0.094,4,0.082,6,0.094,7,0.587,9,0.382,10,1.033,11,1.092,13,1.135,15,0.427,16,0.022,17,1.212,18,0.419,19,0.322,20,0.627,27,0.945,28,1.844,30,0.609,32,0.267,39,0.593,42,0.094,43,0.132,44,0.775,45,0.532,53,1.482,56,0.734,66,0.008,67,0.014,70,0.407,71,2.573,72,4.232,76,1.205,84,0.489,85,0.477,86,0.627,87,0.627,88,0.627,96,1.154,97,0.593,98,1.964,99,1.845,100,1.983,101,0.913,103,0.913,105,3.757,107,4.232,108,3.59,111,3.59,113,1.329,119,1.22,122,2.645,123,1.651,126,3.201,131,0.841,137,2.886,138,1.68,143,1.778,144,0.964,145,0.964,151,0.663,152,1.517,156,1.517,158,1.958,163,2.467,168,1.517,169,1.517,175,2.19,176,2.467,178,0.562,179,1.019,180,0.819,181,1.483,182,0.627,183,0.504,184,0.627,185,0.627,186,0.504,187,0.627,188,0.477,189,1.241,190,0.627,191,0.477,192,0.627,193,0.477,194,0.627,195,0.477,196,0.627,197,0.504,198,0.627,199,0.477,200,0.627,201,0.477,202,0.627,203,0.504,204,0.627,205,0.504,206,0.627,207,0.477,208,0.627,209,0.477,210,0.627,211,0.477,212,0.627,213,1.128,214,1.744,215,0.477,216,0.593,217,0.627,227,1.818,232,5.154,255,3.59,256,3.846,283,1.562,341,4.599,343,1.517,344,1.517,345,1.517,399,3.166,401,2.273,402,2.19,408,3.97,433,1.347,473,1.459,474,2.886,476,2.886,494,2.467,495,2.467,497,2.467,522,1.142,541,0.744,542,2.577,576,2.19,585,3.118,588,1.033,598,1.68,642,1.285,690,3.425,696,4.648,697,3.118,698,4.939,701,2.467,706,3.59,707,3.51,731,2.467,736,2.467,738,2.467,744,3.402,755,3.59,810,1.87,819,1.347,820,0.841,821,1.22,828,2.943,829,2.19,865,1.728,866,0.961,895,1.68,926,1.818,934,1.983,1048,3.59,1172,4.232,1173,4.232,1227,2.467,1316,5.721,1317,1.517,1318,2.887,1319,2.887,1320,4.202,1321,4.202,1322,5.441,1323,4.202,1324,4.202,1325,4.202,1326,4.202,1327,2.887,1328,1.776,1329,1.776,1330,1.776,1331,1.776,1332,1.776,1333,1.776,1334,1.776,1335,1.776,1336,1.776,1337,1.776,1338,1.776,1339,1.776,1340,1.776,1341,1.776,1342,1.776,1343,1.776,1344,1.776,1345,1.776,1346,1.776,1347,1.776,1348,2.887,1349,1.776,1350,2.887,1351,1.776,1352,2.887,1353,1.776,1354,1.776,1355,1.776,1356,1.776,1357,2.887,1358,1.776,1359,1.776,1360,1.776,1361,3.648,1362,1.776,1363,1.776,1364,1.776,1365,1.776,1366,1.776,1367,1.776,1368,1.776,1369,1.776,1370,1.776,1371,1.776,1372,3.648,1373,1.776,1374,1.776,1375,1.776,1376,1.776,1377,1.776,1378,1.776,1379,1.776,1380,1.776,1381,3.648,1382,2.887,1383,1.776,1384,1.776,1385,1.776,1386,1.776,1387,1.776,1388,2.887,1389,1.776,1390,1.776,1391,1.776,1392,1.776,1393,1.776,1394,1.776,1395,1.776,1396,1.776,1397,1.776,1398,1.776,1399,1.776,1400,1.776,1401,1.776,1402,1.776,1403,6.033,1404,6.033,1405,2.887,1406,2.887,1407,2.887,1408,2.887,1409,1.776,1410,2.887,1411,2.887,1412,2.887,1413,2.467,1414,1.776]],["title/coverage.html",[1415,4.187]],["body/coverage.html",[4,0.162,11,1.048,16,0.022,18,0.235,31,1.584,43,0.442,53,0.797,56,0.89,66,0.014,67,0.014,68,2.404,69,2.991,84,0.759,85,0.94,89,2.991,120,1.658,126,1.894,131,1.658,183,0.993,186,0.993,188,0.94,189,0.94,191,0.94,193,0.94,195,0.94,197,0.993,199,0.94,201,0.94,203,0.993,205,0.993,207,0.94,209,0.94,211,0.94,213,0.94,215,0.94,218,1.401,219,2.404,220,2.655,221,2.655,252,2.991,277,1.769,279,2.204,280,1.467,304,2.404,326,2.655,338,2.404,341,2.404,354,2.655,355,2.991,388,2.281,393,2.991,396,2.204,416,3.032,461,2.991,472,2.991,486,2.991,487,2.991,522,2.877,528,2.037,533,2.991,582,2.404,583,2.655,584,3.653,625,2.991,645,2.655,646,2.991,673,2.991,674,2.991,694,2.655,804,2.991,850,2.991,862,2.204,881,3.653,936,2.991,939,2.991,965,2.991,966,4.176,974,2.404,981,2.404,985,2.991,993,2.991,1037,2.991,1070,2.991,1074,2.991,1075,2.991,1099,2.991,1100,2.991,1105,2.991,1110,2.991,1113,3.653,1122,2.655,1127,2.655,1128,2.991,1170,2.991,1184,3.653,1210,2.991,1316,2.991,1317,2.991,1415,2.991,1416,3.501,1417,3.501,1418,5.506,1419,5.93,1420,3.501,1421,4.817,1422,3.501,1423,6.805,1424,3.501,1425,3.501,1426,3.501,1427,3.501,1428,3.501,1429,3.501,1430,3.501,1431,4.817,1432,3.501,1433,3.501,1434,3.501,1435,3.501,1436,3.501,1437,5.506,1438,3.501,1439,3.501,1440,3.501,1441,3.501,1442,4.817,1443,4.817,1444,4.817,1445,3.501,1446,3.501,1447,3.501,1448,5.506,1449,5.506,1450,3.501,1451,3.501,1452,3.501,1453,3.501,1454,3.501,1455,3.501,1456,3.501,1457,3.501,1458,4.716,1459,6.218,1460,2.991,1461,2.991,1462,4.115,1463,2.991,1464,3.501]],["title/dependencies.html",[268,2.183,1465,2.999]],["body/dependencies.html",[16,0.022,32,0.745,33,2.502,37,3.048,66,0.017,67,0.017,268,2.502,270,3.755,286,5.153,287,4.142,293,4.23,296,3.755,297,4.23,310,3.4,331,4.23,332,2.679,333,4.23,367,4.23,905,2.881,1090,4.23,1139,4.23,1466,4.951,1467,4.951,1468,7.264,1469,4.951,1470,6.031,1471,4.951,1472,4.951,1473,4.951,1474,4.951,1475,4.951,1476,4.951,1477,4.951,1478,4.951,1479,4.951,1480,4.951,1481,4.951,1482,4.951,1483,4.951,1484,4.951,1485,4.951,1486,4.951,1487,4.951,1488,4.951,1489,4.951,1490,4.951]],["title/miscellaneous/enumerations.html",[1491,1.745,1492,3.69]],["body/miscellaneous/enumerations.html",[2,0.254,6,0.184,16,0.022,18,0.233,23,2.42,27,0.629,66,0.014,67,0.014,100,3.288,145,2.529,220,2.633,221,3.631,231,2.02,239,2.185,243,3.631,244,2.966,247,2.966,248,2.966,251,4.091,473,1.754,542,2.268,583,2.633,685,2.966,719,4.091,720,4.091,721,4.091,775,3.014,828,2.591,841,2.966,865,2.268,1198,3.631,1201,2.633,1413,4.091,1491,2.02,1492,2.966,1493,3.472,1494,4.788,1495,3.472,1496,4.788,1497,3.472,1498,3.472,1499,3.472,1500,3.472,1501,3.472,1502,3.472,1503,3.472,1504,3.472,1505,3.472,1506,3.472,1507,3.472,1508,3.472,1509,3.472,1510,3.472,1511,3.472,1512,3.472,1513,3.472,1514,3.472,1515,3.472,1516,3.472,1517,3.472,1518,3.472,1519,3.472,1520,3.472,1521,3.472,1522,3.472,1523,3.472,1524,3.472,1525,3.472,1526,3.472,1527,3.472,1528,3.472,1529,3.472,1530,3.472,1531,3.472,1532,3.472,1533,3.472,1534,3.472,1535,3.472,1536,3.472,1537,3.472,1538,3.472,1539,3.472,1540,3.472,1541,3.472,1542,3.472,1543,3.472,1544,3.472,1545,3.472,1546,3.472,1547,3.472,1548,3.472,1549,3.472,1550,3.472,1551,3.472,1552,3.472,1553,3.472,1554,3.472,1555,3.472,1556,3.472,1557,3.472,1558,3.472,1559,3.472,1560,3.472,1561,3.472,1562,3.472,1563,3.472,1564,3.472,1565,3.472,1566,3.472,1567,3.472,1568,3.472,1569,3.472,1570,3.472,1571,3.472,1572,3.472,1573,3.472,1574,3.472,1575,3.472,1576,3.472,1577,2.966,1578,3.472,1579,3.472,1580,3.472,1581,3.472,1582,3.472,1583,3.472,1584,3.472,1585,3.472,1586,3.472,1587,3.472,1588,3.472,1589,3.472,1590,3.472,1591,3.472,1592,3.472,1593,3.472,1594,3.472,1595,3.472,1596,3.472,1597,3.472,1598,3.472,1599,3.472,1600,3.472,1601,3.472]],["title/index.html",[6,0.159,684,2.06,952,2.562]],["body/index.html",[3,0.202,4,0.176,16,0.02,17,0.688,41,1.92,55,2.571,56,0.966,66,0.015,67,0.015,84,0.608,90,1.701,99,1.077,131,2.905,138,3.569,171,4.652,223,3.496,229,3.205,283,2.056,296,5.1,360,3.246,399,3.913,401,2.056,469,3.205,511,3.246,577,3.861,619,3.246,637,2.609,670,2.882,671,3.246,675,3.246,703,3.246,707,2.963,710,2.609,714,3.246,742,3.246,753,3.246,757,2.609,787,3.246,829,2.882,830,3.246,837,4.906,838,3.246,895,3.913,948,4.35,977,3.246,980,2.882,1055,3.246,1577,3.246,1602,3.8,1603,5.092,1604,5.743,1605,5.743,1606,3.8,1607,3.8,1608,5.092,1609,6.725,1610,3.8,1611,6.584,1612,3.8,1613,3.8,1614,3.8,1615,3.8,1616,6.397,1617,3.8,1618,3.8,1619,3.8,1620,5.092,1621,3.8,1622,3.8,1623,3.246,1624,7.105,1625,2.882,1626,5.092,1627,3.8,1628,3.8,1629,5.743,1630,5.092,1631,6.994,1632,3.8,1633,3.8,1634,6.397,1635,5.092,1636,5.743,1637,3.8,1638,3.8,1639,5.743,1640,3.8,1641,5.743,1642,3.8,1643,6.397,1644,3.8,1645,3.8,1646,3.8,1647,3.8,1648,3.8,1649,3.8,1650,5.092,1651,3.8,1652,3.8,1653,3.8,1654,3.8,1655,3.8,1656,3.8,1657,5.092,1658,6.397,1659,5.092,1660,5.092,1661,3.8,1662,3.8,1663,3.8]],["title/modules.html",[266,2.652]],["body/modules.html",[16,0.019,66,0.019,67,0.019,266,3.091,267,3.923,276,3.596,287,3.923,488,4.332,505,4.881,772,4.508,1664,5.713,1665,5.713]],["title/overview.html",[1625,3.717]],["body/overview.html",[0,3.077,11,1.776,16,0.021,26,1.806,31,0.977,42,0.216,43,0.302,56,1.032,66,0.015,67,0.015,84,0.429,85,1.593,173,2.361,178,1.283,183,1.682,186,1.938,188,1.593,191,1.593,193,1.593,195,1.593,197,1.682,199,1.593,201,1.593,203,1.682,205,1.682,207,1.593,209,1.593,211,1.593,213,1.593,215,1.593,218,0.825,240,2.554,242,3.734,266,2.877,267,5.206,268,2.051,269,3.077,270,3.077,271,3.467,272,3.467,273,3.467,274,3.467,275,3.467,276,3.734,277,2.998,278,4.074,279,3.734,280,2.486,281,4.543,282,3.467,283,2.195,1147,3.094,1625,3.077,1666,4.058,1667,4.058,1668,4.058,1669,4.058,1670,4.058]],["title/routes.html",[26,2.181]],["body/routes.html",[16,0.019,26,2.597,66,0.019,67,0.019]],["title/miscellaneous/typealiases.html",[1491,1.745,1671,4.319]],["body/miscellaneous/typealiases.html",[6,0.295,16,0.018,18,0.434,66,0.018,67,0.018,70,0.782,76,1.004,481,3.037,836,4.737,1239,4.737,1491,3.226,1672,5.545,1673,5.545,1674,7.027,1675,5.545,1676,5.545,1677,5.545,1678,5.545,1679,5.545,1680,5.545]],["title/miscellaneous/variables.html",[1458,3.276,1491,1.745]],["body/miscellaneous/variables.html",[6,0.26,16,0.021,18,0.453,65,3.484,66,0.017,67,0.017,76,1.084,144,2.252,145,2.252,416,4.43,512,4.63,642,2.177,694,4.907,1113,3.71,1122,4.907,1123,4.179,1458,3.71,1460,4.179,1461,4.179,1462,4.179,1463,5.528,1491,2.846,1623,5.115,1681,5.987,1682,4.892,1683,4.892,1684,4.892,1685,4.892,1686,4.892,1687,6.47,1688,5.987,1689,5.987,1690,5.987,1691,5.987,1692,5.987,1693,5.987,1694,4.892]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":522,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1147,"title":{"interfaces/UserCard-1.html":{}},"body":{"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1607,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1166,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":924,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1669,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["100000000000",{"_index":1150,"title":{},"body":{"injectables/UploadService.html":{}}}],["11/11",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1670,"title":{},"body":{"overview.html":{}}}],["13/30",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1403,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["153",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1666,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["174",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1269,"title":{},"body":{"components/UsercardComponent.html":{}}}],["234.comput",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":1202,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["3.2.2",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1668,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["43/48",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["56/60",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1667,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1279,"title":{},"body":{"components/UsercardComponent.html":{}}}],["8/10",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":893,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["93",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["abov",{"_index":756,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1142,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":238,"title":{},"body":{"interfaces/ApiError.html":{}}}],["accordingli",{"_index":641,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["account",{"_index":682,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["account'",{"_index":761,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":789,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["accountinfocompon",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1231,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1171,"title":{},"body":{"interfaces/User.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual_compon",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["add",{"_index":577,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"index.html":{}}}],["addcartous",{"_index":500,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":225,"title":{},"body":{"interfaces/ApiError.html":{}}}],["address",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["address2",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{},"components/ViewProfileComponent.html":{}}}],["addressid",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["addressselect",{"_index":1078,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["admin.component.css",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":85,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administr",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{}}}],["again",{"_index":783,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybxwxgwzxhyvz9jyn9srhggozi7vcu5g3g",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1143,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1672,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["allpost",{"_index":1393,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["alow",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["alreadi",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["amobil",{"_index":640,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["amount",{"_index":1647,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1604,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":905,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/source_map",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1272,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1281,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":916,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1213,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1214,"title":{},"body":{"components/UsercardComponent.html":{}}}],["apart",{"_index":701,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["api",{"_index":239,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":219,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":617,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":621,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":243,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":186,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":782,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["appmodul",{"_index":267,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":354,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appplacesautocomplet",{"_index":216,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["appropri",{"_index":508,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["approutingmodul",{"_index":276,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":847,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":833,"title":{},"body":{"components/LandingComponent.html":{}}}],["arizona",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["array",{"_index":233,"title":{},"body":{"interfaces/ApiError.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1617,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1259,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1297,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1154,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["assum",{"_index":1633,"title":{},"body":{"index.html":{}}}],["async",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{}}}],["attribut",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{}}}],["authent",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["authenticate(email",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":801,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservic",{"_index":277,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1123,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["autocomplet",{"_index":1095,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1097,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1075,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:10",{"_index":1089,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:13",{"_index":1082,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:19",{"_index":1086,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:24",{"_index":1087,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":619,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":505,"title":{},"body":{"components/CarRegistrationComponent.html":{},"modules.html":{}}}],["avatar",{"_index":1294,"title":{},"body":{"components/UsercardComponent.html":{}}}],["avoid",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aw",{"_index":1139,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["await/async",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["az",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1630,"title":{},"body":{"index.html":{}}}],["back",{"_index":743,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["bar",{"_index":758,"title":{},"body":{"components/HowToComponent.html":{}}}],["base",{"_index":1655,"title":{},"body":{"index.html":{}}}],["batch",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["batchend",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["be",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["bearer",{"_index":802,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1155,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1648,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":629,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["big",{"_index":762,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":934,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["biographi",{"_index":706,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["blablablabla",{"_index":935,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["block",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":763,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1152,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["bootstrap",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":728,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["branch",{"_index":1631,"title":{},"body":{"index.html":{}}}],["brand",{"_index":732,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":773,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":772,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":361,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":493,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1141,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1616,"title":{},"body":{"index.html":{}}}],["burden",{"_index":840,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":543,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["c.foreach(el",{"_index":552,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":578,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":579,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":580,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":581,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{}}}],["calcul",{"_index":978,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/UsercardComponent.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canedit",{"_index":1320,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["car",{"_index":189,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["car.model",{"_index":1182,"title":{},"body":{"interfaces/User.html":{}}}],["card",{"_index":875,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":928,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.firstnam",{"_index":879,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":494,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carmodel",{"_index":495,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carobject",{"_index":496,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carousel",{"_index":805,"title":{},"body":{"components/LandingComponent.html":{}}}],["carpool",{"_index":831,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":188,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":497,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":608,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["center",{"_index":1237,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1678,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":895,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["charact",{"_index":1404,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["check",{"_index":637,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["checkifloggedin",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checkout",{"_index":1629,"title":{},"body":{"index.html":{}}}],["choos",{"_index":724,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":734,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":832,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/AppPage.html":{},"classes/Car.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":518,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1605,"title":{},"body":{"index.html":{}}}],["click",{"_index":683,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["client",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["closer",{"_index":781,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":1613,"title":{},"body":{"index.html":{}}}],["colorado",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":992,"title":{},"body":{"interfaces/Marker.html":{}}}],["commit",{"_index":1634,"title":{},"body":{"index.html":{}}}],["common",{"_index":1071,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compani",{"_index":524,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{}}}],["compat",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1234,"title":{},"body":{"components/UsercardComponent.html":{}}}],["complex",{"_index":906,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["compnent",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compoennt",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["compon",{"_index":84,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":698,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["confirmpassword",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/ViewProfileComponent.html":{}}}],["conflict",{"_index":1650,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":750,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":615,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":669,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"data2",{"_index":1191,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log(\"nop",{"_index":1389,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log('befor",{"_index":1169,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":559,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1285,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('geocod",{"_index":667,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('her",{"_index":920,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('in",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('loggeddata2",{"_index":921,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('print",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1161,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1159,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('thi",{"_index":917,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('upload",{"_index":1164,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":919,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":871,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":1287,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":1030,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(ev",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1162,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(posts.results[0].id",{"_index":1394,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(this.currentus",{"_index":821,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1300,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1301,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.userservice.getofficebylink(this.currentuser.office).subscribe().tostr",{"_index":1354,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(userlink",{"_index":1286,"title":{},"body":{"components/UsercardComponent.html":{}}}],["const",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1250,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(authservic",{"_index":594,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1079,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":854,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(tokenstorag",{"_index":794,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contact",{"_index":585,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contactinfo",{"_index":582,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":759,"title":{},"body":{"components/HowToComponent.html":{}}}],["context",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["controller.service.t",{"_index":966,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:17",{"_index":971,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:18",{"_index":1010,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:27",{"_index":1019,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:29",{"_index":976,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:38",{"_index":1017,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:49",{"_index":1022,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:61",{"_index":1027,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:69",{"_index":1008,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:79",{"_index":1004,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:89",{"_index":1024,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:9",{"_index":969,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":241,"title":{},"body":{"interfaces/ApiError.html":{}}}],["core",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":236,"title":{},"body":{"interfaces/ApiError.html":{}}}],["coverag",{"_index":1415,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{}}}],["credenti",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["currentindex",{"_index":1215,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentrol",{"_index":1321,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["currentswipecard",{"_index":1216,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1304,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1305,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":810,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["cuser",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data2",{"_index":870,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":876,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.photourl",{"_index":872,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["databas",{"_index":478,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{}}}],["date",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date().getfullyear",{"_index":575,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date(sessionstorage.getitem(\"batchend\")).tolocaledatestr",{"_index":1359,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dateformatpip",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["datelocationencrypt",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{}}}],["dc",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1179,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1646,"title":{},"body":{"index.html":{}}}],["declar",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":1251,"title":{},"body":{"components/UsercardComponent.html":{}}}],["default",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["degre",{"_index":894,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demonstr",{"_index":856,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["depend",{"_index":268,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["deseri",{"_index":1011,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["desktop",{"_index":631,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["detail",{"_index":222,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":1649,"title":{},"body":{"index.html":{}}}],["determin",{"_index":779,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["dev",{"_index":1611,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1608,"title":{},"body":{"index.html":{}}}],["devic",{"_index":639,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["devif",{"_index":1652,"title":{},"body":{"index.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1615,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1620,"title":{},"body":{"index.html":{}}}],["discord",{"_index":722,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":775,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":994,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":1002,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":676,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["dist",{"_index":1619,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":780,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["distinguish",{"_index":628,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["districtofcolumbia",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":1254,"title":{},"body":{"components/UsercardComponent.html":{}}}],["document",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid(\"address\").removeattribute(\"dis",{"_index":1367,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").removeattribute(\"dis",{"_index":1368,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").setattribute(\"typ",{"_index":1369,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"confirmpassword\").removeattribute(\"dis",{"_index":1366,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"currentoffice\").style.display",{"_index":1370,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"currentoffice\").textcont",{"_index":1355,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"edit\").style.display",{"_index":1373,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"email\").removeattribute(\"dis",{"_index":1364,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"errormessage\").removeattribute(\"hidden",{"_index":1375,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"firstname\").removeattribute(\"dis",{"_index":1362,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"lastname\").removeattribute(\"dis",{"_index":1363,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"password\").removeattribute(\"dis",{"_index":1365,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"passworderror\").style.display",{"_index":1400,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"profilepic\").setattribute(\"src\",this.currentuser.photourl",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid(\"selectoffice\").style.display",{"_index":1371,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"submit\").style.display",{"_index":1374,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["done",{"_index":725,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["draggabl",{"_index":986,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":542,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":768,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":771,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":790,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":1003,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dropdown",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["due",{"_index":620,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1188,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1106,"title":{},"body":{"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["dynam",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["e.g",{"_index":1072,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1662,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":355,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":359,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":358,"title":{},"body":{"classes/AppPage.html":{}}}],["earli",{"_index":1651,"title":{},"body":{"index.html":{}}}],["east",{"_index":923,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["edit",{"_index":1322,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["effort",{"_index":709,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["element(by.css('app",{"_index":362,"title":{},"body":{"classes/AppPage.html":{}}}],["element.owner.substring(7",{"_index":554,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1080,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1083,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["elref.nativeel",{"_index":1092,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["employe",{"_index":713,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":844,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":849,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":232,"title":{},"body":{"interfaces/ApiError.html":{},"components/ViewProfileComponent.html":{}}}],["enabl",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["encrypt",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationd",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":886,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":889,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":835,"title":{},"body":{"components/LandingComponent.html":{}}}],["ensur",{"_index":520,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["enter",{"_index":704,"title":{},"body":{"components/HowToComponent.html":{}}}],["entri",{"_index":586,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1492,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":1158,"title":{},"body":{"injectables/UploadService.html":{}}}],["err.error",{"_index":609,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":618,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":231,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":605,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":221,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":611,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":242,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1644,"title":{},"body":{"index.html":{}}}],["evalu",{"_index":1197,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["event",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["eventemitt",{"_index":1084,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["exampl",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LikesComponent.html":{}}}],["execut",{"_index":1659,"title":{},"body":{"index.html":{}}}],["exist",{"_index":675,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["expir",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["extra",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{}}}],["face",{"_index":896,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fact",{"_index":818,"title":{},"body":{"components/LandingComponent.html":{}}}],["fail",{"_index":563,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":642,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":740,"title":{},"body":{"components/HowToComponent.html":{}}}],["favorit",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["favorites.component.css",{"_index":632,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":633,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":191,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["featur",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{}}}],["fellow",{"_index":712,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":1014,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["field",{"_index":227,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["file.nam",{"_index":1151,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":731,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["final",{"_index":735,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{}}}],["finish",{"_index":738,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["first",{"_index":690,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["firstnam",{"_index":1172,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["fit",{"_index":716,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1622,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":887,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":897,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":765,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1129,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":671,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["forc",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forgot",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":516,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["format",{"_index":230,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["formsmodul",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":915,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":489,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["further",{"_index":830,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["ga",{"_index":841,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["geocod",{"_index":647,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":650,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":645,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":972,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["georgia",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":952,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{}}}],["getcurrentus",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":995,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":1007,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":967,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":970,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getformattedaddress",{"_index":1076,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getformattedaddress(plac",{"_index":1085,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":996,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":1009,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":997,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":1016,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":998,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":1018,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getparagraphtext",{"_index":356,"title":{},"body":{"classes/AppPage.html":{}}}],["getregistrationkey",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrol",{"_index":1323,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getrout",{"_index":968,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":975,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1130,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1114,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["getus",{"_index":1324,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getuser(email",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["git",{"_index":1624,"title":{},"body":{"index.html":{}}}],["github",{"_index":1654,"title":{},"body":{"index.html":{}}}],["give",{"_index":748,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["given",{"_index":699,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["go",{"_index":742,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":891,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":714,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":660,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":656,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":662,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":663,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":664,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":653,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":989,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1096,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1090,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":561,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["grab",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":1665,"title":{},"body":{"modules.html":{}}}],["group",{"_index":845,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":723,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":363,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1195,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["have",{"_index":1013,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":754,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":788,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["help",{"_index":837,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":710,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hide",{"_index":1226,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1221,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1224,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hold",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["home",{"_index":686,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hopefulli",{"_index":786,"title":{},"body":{"components/HowToComponent.html":{}}}],["host",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hour",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["howto",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":193,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["htmlinputel",{"_index":1088,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":237,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://192.168.60.54:2222",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1612,"title":{},"body":{"index.html":{}}}],["http://semant",{"_index":873,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":602,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":600,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":601,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":597,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://s3.u",{"_index":922,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1680,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ia",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":990,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":473,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idaho",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1642,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["if(!this.userservice.isloggedin",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(sessionstorage.getitem(\"rol",{"_index":1388,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.password",{"_index":1398,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.userservice.isloggedin",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ignor",{"_index":679,"title":{},"body":{"components/HowToComponent.html":{}}}],["il",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imag",{"_index":1262,"title":{},"body":{"components/UsercardComponent.html":{}}}],["immedi",{"_index":776,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["incorrect",{"_index":741,"title":{},"body":{"components/HowToComponent.html":{}}}],["indend",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":234,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":983,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":584,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["infowindow",{"_index":991,"title":{},"body":{"interfaces/Marker.html":{}}}],["initi",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["initila",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{}}}],["inject",{"_index":31,"title":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1372,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["input",{"_index":689,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["instanceof",{"_index":610,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1153,"title":{},"body":{"injectables/UploadService.html":{}}}],["instructor",{"_index":700,"title":{},"body":{"components/HowToComponent.html":{}}}],["intercept",{"_index":593,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":596,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":591,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1198,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":218,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["intro",{"_index":807,"title":{},"body":{"components/LandingComponent.html":{}}}],["invok",{"_index":659,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["it'",{"_index":787,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":792,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":374,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["item.info",{"_index":1406,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["item.typ",{"_index":1405,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["js",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["judgment",{"_index":1199,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["jwtinterceptor",{"_index":278,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1661,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1239,"title":{},"body":{"components/UsercardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{}}}],["ks",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":987,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["landing.component.css",{"_index":808,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":809,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":195,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":696,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["lastnam",{"_index":1173,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["latitud",{"_index":937,"title":{},"body":{"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":655,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":973,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["left",{"_index":1245,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["lessen",{"_index":839,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":627,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1200,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":885,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":999,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":1021,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likes.component.css",{"_index":851,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":852,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":197,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":882,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":200,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likesmatchweb.component.css",{"_index":883,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":884,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":199,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["link",{"_index":481,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":485,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["list",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["littl",{"_index":708,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1176,"title":{},"body":{"interfaces/User.html":{}}}],["local",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":120,"title":{"interfaces/Location.html":{}},"body":{"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1093,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":202,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login.component.css",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":201,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["longitud",{"_index":938,"title":{},"body":{"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":747,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["louisiana",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1635,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":685,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["manag",{"_index":490,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["manual",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manufactur",{"_index":525,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["map",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["map'},{'nam",{"_index":204,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["map(token",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1081,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":279,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["marker",{"_index":974,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1656,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":1029,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":1035,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":1036,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":1031,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":1033,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":280,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":857,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1149,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["member",{"_index":846,"title":{},"body":{"components/LandingComponent.html":{}}}],["merg",{"_index":1643,"title":{},"body":{"index.html":{}}}],["messag",{"_index":223,"title":{},"body":{"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["meter",{"_index":1108,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["mi",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1491,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":228,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1178,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":630,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["mode",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":474,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/address.model",{"_index":1263,"title":{},"body":{"components/UsercardComponent.html":{}}}],["models/api",{"_index":604,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":540,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/link.model",{"_index":867,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/role.model",{"_index":866,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/rout",{"_index":982,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":864,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":541,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["modul",{"_index":266,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":707,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["move",{"_index":705,"title":{},"body":{"components/HowToComponent.html":{}}}],["ms",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["nav",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":687,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":206,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["navbar.component.css",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":205,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":757,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":357,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":1409,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["nc",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":764,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":829,"title":{},"body":{"components/LandingComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["network",{"_index":613,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":598,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["next.handle(request",{"_index":803,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":607,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["nh",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1307,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":926,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["northcarolina",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":702,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":737,"title":{},"body":{"components/HowToComponent.html":{}}}],["null",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":555,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":556,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":590,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["o",{"_index":1315,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["object",{"_index":512,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MatchingControllerService.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["observable.create((observ",{"_index":658,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":666,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":668,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":665,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":614,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["offic",{"_index":126,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["office.model",{"_index":1181,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobject",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobjectarray",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["oh",{"_index":1570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1632,"title":{},"body":{"index.html":{}}}],["on",{"_index":749,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":703,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oninit",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ontap",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1276,"title":{},"body":{"components/UsercardComponent.html":{}}}],["oper",{"_index":513,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["optintodr",{"_index":498,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["order",{"_index":753,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":1638,"title":{},"body":{"index.html":{}}}],["other",{"_index":836,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1077,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["over",{"_index":626,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["overview",{"_index":1625,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1674,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["own",{"_index":530,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["owner",{"_index":475,"title":{},"body":{"classes/Car.html":{}}}],["ownwer",{"_index":531,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["p4ssw0rd",{"_index":1385,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["pa",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1465,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/HowToComponent.html":{}}}],["param",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["params.bucket",{"_index":1167,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1168,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":691,"title":{},"body":{"components/HowToComponent.html":{}}}],["passcheck",{"_index":1397,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["passeng",{"_index":717,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":769,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":791,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/ViewProfileComponent.html":{}}}],["password).topromise().then",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":892,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["phone",{"_index":719,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1180,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1174,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1227,"title":{},"body":{"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["pin",{"_index":766,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["place",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":988,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":215,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":729,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":755,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["popul",{"_index":859,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibel",{"_index":1189,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["post",{"_index":1392,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["post(environment.apiurl",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":715,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["present",{"_index":532,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["previou",{"_index":744,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["previous",{"_index":538,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["price",{"_index":842,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":235,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["problem",{"_index":1628,"title":{},"body":{"index.html":{}}}],["process",{"_index":692,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1621,"title":{},"body":{"index.html":{}}}],["produc",{"_index":535,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["product",{"_index":1623,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["profile.compon",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1318,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.html",{"_index":1319,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.t",{"_index":1317,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:13",{"_index":1327,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:15",{"_index":1340,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:16",{"_index":1341,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":1345,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1344,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":1338,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":1335,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:21",{"_index":1336,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":1337,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1343,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":1342,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":1332,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":1328,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:61",{"_index":1333,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:74",{"_index":1334,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:86",{"_index":1329,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:92",{"_index":1339,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:93",{"_index":1330,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:97",{"_index":1346,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":1331,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile/view",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":817,"title":{},"body":{"components/LandingComponent.html":{}}}],["project",{"_index":1603,"title":{},"body":{"index.html":{}}}],["promis",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":360,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":240,"title":{},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"components/FavoritesComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":634,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puertorico",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1641,"title":{},"body":{"index.html":{}}}],["push",{"_index":1636,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1640,"title":{},"body":{"index.html":{}}}],["put",{"_index":918,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["rc.0",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":746,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":784,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1663,"title":{},"body":{"index.html":{}}}],["reason",{"_index":672,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refresh",{"_index":515,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["refreshfield",{"_index":501,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":560,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1146,"title":{},"body":{"injectables/UploadService.html":{}}}],["regis",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{}}}],["regist",{"_index":528,"title":{"interfaces/Register.html":{}},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{}}}],["registration'},{'nam",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["registration.compon",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":491,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":492,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":487,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:108",{"_index":507,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:129",{"_index":514,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:19",{"_index":539,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:25",{"_index":527,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:29",{"_index":523,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:34",{"_index":526,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:39",{"_index":534,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":536,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:49",{"_index":529,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":504,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:63",{"_index":510,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:70",{"_index":517,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:94",{"_index":519,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{}}}],["relev",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["relic",{"_index":537,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reload",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remov",{"_index":1025,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["repeat",{"_index":778,"title":{},"body":{"components/HowToComponent.html":{}}}],["repo",{"_index":1627,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1253,"title":{},"body":{"components/UsercardComponent.html":{}}}],["request",{"_index":229,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["request.clon",{"_index":799,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":694,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserv",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{}}}],["reset",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":502,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":503,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1653,"title":{},"body":{"index.html":{}}}],["respect",{"_index":745,"title":{},"body":{"components/HowToComponent.html":{}}}],["respons",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{}}}],["reston",{"_index":1073,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["revatur",{"_index":680,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":648,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":652,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":736,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rhodeisland",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":825,"title":{},"body":{"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["rideforc",{"_index":681,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":828,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":1006,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":752,"title":{},"body":{"components/HowToComponent.html":{}}}],["ridesharecli",{"_index":1602,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":208,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rideswipe.component.css",{"_index":1101,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1102,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":207,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1247,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":865,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1183,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rotat",{"_index":899,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":911,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":914,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":912,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":981,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routerlink",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":1609,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1136,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1137,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":925,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":843,"title":{},"body":{"components/LandingComponent.html":{}}}],["save",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"components/ViewProfileComponent.html":{}}}],["savetoken",{"_index":1115,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1119,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1614,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1275,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1278,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scroll",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1140,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":1109,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1144,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":693,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":638,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["select",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["selector",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["send",{"_index":509,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{}}}],["sent",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["serv",{"_index":1610,"title":{},"body":{"index.html":{}}}],["server",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/map",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/auth.servic",{"_index":606,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["session",{"_index":811,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessioncheck",{"_index":812,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.clear",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{}}}],["sessionstorage.getitem(\"address",{"_index":1358,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"firstnam",{"_index":1349,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"lastnam",{"_index":1351,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"rol",{"_index":1390,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"useremail",{"_index":1353,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1126,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":823,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.removeitem(token_key",{"_index":1124,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.setitem(\"address",{"_index":1379,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(\"batchend",{"_index":1380,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(\"firstnam",{"_index":1376,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(\"lastnam",{"_index":1377,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(\"rol",{"_index":1381,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(\"useremail",{"_index":1378,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(\"userpassword",{"_index":1401,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('act",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('batchend",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('id",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('rol",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('useremail",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1125,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sethead",{"_index":800,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["seven",{"_index":718,"title":{},"body":{"components/HowToComponent.html":{}}}],["show",{"_index":767,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["shown",{"_index":777,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":612,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":826,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["signout",{"_index":1116,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["simpli",{"_index":730,"title":{},"body":{"components/HowToComponent.html":{}}}],["site",{"_index":806,"title":{},"body":{"components/LandingComponent.html":{}}}],["skype",{"_index":721,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":720,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":1194,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spec\\.t",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":587,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1645,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1673,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.t",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.storage.t",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1675,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:17",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:19",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:21",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:40",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:50",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:61",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":486,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":625,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:12",{"_index":635,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:17",{"_index":636,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":673,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":804,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:16",{"_index":816,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:18",{"_index":813,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:29",{"_index":814,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:48",{"_index":815,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":850,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:22",{"_index":855,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:34",{"_index":861,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:39",{"_index":858,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":881,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:104",{"_index":898,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:115",{"_index":890,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:45",{"_index":888,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:57",{"_index":901,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:62",{"_index":900,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:43",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:70",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:98",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1100,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:10",{"_index":1103,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:14",{"_index":1104,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1210,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:121",{"_index":1225,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:132",{"_index":1230,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:163",{"_index":1233,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:187",{"_index":1235,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:37",{"_index":1249,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:39",{"_index":1258,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:45",{"_index":1243,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:47",{"_index":1242,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:49",{"_index":1238,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:51",{"_index":1241,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:53",{"_index":1260,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:56",{"_index":1256,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:58",{"_index":1223,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:68",{"_index":1244,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:73",{"_index":1228,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1184,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:126",{"_index":1311,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:138",{"_index":1310,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:35",{"_index":1309,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:45",{"_index":1314,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:50",{"_index":1313,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:87",{"_index":1312,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1316,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["src/app/directives/plac",{"_index":1074,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:2",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:3",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:5",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:7",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":220,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":472,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:12",{"_index":482,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:13",{"_index":479,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:14",{"_index":480,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":483,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:8",{"_index":477,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":583,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interest.model.t",{"_index":1500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1676,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":936,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":985,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1070,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1099,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1105,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1110,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:4",{"_index":1111,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:5",{"_index":1112,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1170,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":965,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":993,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:88",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/geocode.service.t",{"_index":646,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":654,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:32",{"_index":651,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:9",{"_index":649,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1128,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:10",{"_index":1132,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:14",{"_index":1133,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:25",{"_index":1135,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:9",{"_index":1138,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":592,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:17",{"_index":595,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":599,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":793,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:12",{"_index":795,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":796,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1113,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:11",{"_index":1121,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:16",{"_index":1120,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:21",{"_index":1118,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:8",{"_index":1117,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1677,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":684,"title":{"index.html":{}},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":913,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1265,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":909,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1267,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1274,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1270,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1277,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":224,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{}}}],["step",{"_index":1626,"title":{},"body":{"index.html":{}}}],["store",{"_index":1618,"title":{},"body":{"index.html":{}}}],["string",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":553,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["structur",{"_index":863,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["style",{"_index":902,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sub",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["submit",{"_index":576,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["submitchang",{"_index":1325,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["success",{"_index":670,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":751,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":226,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":488,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"modules.html":{}}}],["sure",{"_index":511,"title":{},"body":{"components/CarRegistrationComponent.html":{},"index.html":{}}}],["svg",{"_index":1664,"title":{},"body":{"modules.html":{}}}],["swipcard",{"_index":860,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["swipe",{"_index":1193,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1229,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1217,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipebio",{"_index":1255,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":853,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1218,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1219,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":862,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1246,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipemain",{"_index":1257,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1248,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["switchrol",{"_index":1326,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["system",{"_index":506,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["tabl",{"_index":533,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":977,"title":{},"body":{"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["templat",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["templateurl",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tennesse",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":1658,"title":{},"body":{"index.html":{}}}],["texa",{"_index":1586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text",{"_index":880,"title":{},"body":{"components/LikesComponent.html":{}}}],["th",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["thank",{"_index":1679,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["themselv",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{}}}],["there'",{"_index":1306,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1308,"title":{},"body":{"components/UsercardComponent.html":{}}}],["think",{"_index":774,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.address2",{"_index":1357,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1098,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1295,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1293,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.authenticator(email",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.car",{"_index":545,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":566,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":568,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":544,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":564,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":565,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":567,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":569,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":571,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":547,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":557,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":572,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.confirmpassword",{"_index":1399,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentindex",{"_index":1303,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentrol",{"_index":1382,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentswipecard",{"_index":1289,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":820,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.datelocationencrypt",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.el",{"_index":1091,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.firstnam",{"_index":1348,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.fold",{"_index":1148,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":657,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":661,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.getrol",{"_index":1361,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1157,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.getus",{"_index":1360,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.http",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":1034,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":984,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":1028,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":1032,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isloggedin",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.lastnam",{"_index":1350,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.likecards.push(card",{"_index":927,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1094,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1208,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":869,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1190,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1206,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1204,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1207,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.password",{"_index":1402,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.password).subscrib",{"_index":1386,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.postservice.getposts().then((allpost",{"_index":1391,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.registrationkey",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetus",{"_index":548,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate(['/land",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.url",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":824,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":822,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.swipe_action.left",{"_index":1299,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1232,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1291,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1292,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1288,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":878,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1302,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1290,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1298,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1296,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":798,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1165,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1396,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.usernam",{"_index":1352,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userobject",{"_index":562,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":573,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":550,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id.tostr",{"_index":570,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1192,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1209,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1203,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1205,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":574,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":551,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getallusers().subscribe((x",{"_index":1395,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":558,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":819,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getofficebylink(this.currentuser.office).tostr",{"_index":1356,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).subscrib",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update().subscrib",{"_index":1383,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.updatepassword(this.currentuser.id",{"_index":1384,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["thrash",{"_index":1501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":727,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":603,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":616,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":739,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumb",{"_index":1236,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbanimdon",{"_index":1222,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1220,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbnail",{"_index":1261,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":980,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"index.html":{}}}],["titl",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["to.compon",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":677,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":678,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":674,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to/how",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["tobase64str",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{}}}],["today",{"_index":827,"title":{},"body":{"components/LandingComponent.html":{}}}],["token",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{}}}],["token.storag",{"_index":797,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1122,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":396,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["total",{"_index":1107,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["track",{"_index":1240,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trainer",{"_index":1413,"title":{},"body":{"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":910,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":903,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1280,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1282,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1268,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1266,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1271,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1201,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":979,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["trigger",{"_index":904,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":908,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1273,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1264,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":760,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1671,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1637,"title":{},"body":{"index.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":874,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":546,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["under",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":688,"title":{},"body":{"components/HowToComponent.html":{}}}],["undislikedriv",{"_index":1000,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":1023,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1657,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":907,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["unlik",{"_index":1005,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":1001,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":1026,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unus",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["up",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["updat",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["upload",{"_index":1160,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1131,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1134,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1127,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1156,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1163,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":1015,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"index.html":{}}}],["useclass",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["user'",{"_index":588,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{}}}],["user.email",{"_index":1411,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.firstnam",{"_index":1408,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.id",{"_index":1407,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.lastnam",{"_index":1410,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.model",{"_index":484,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.rol",{"_index":1412,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.user.address",{"_index":932,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":933,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":931,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":929,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":930,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1414,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["usercard",{"_index":388,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":210,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usercard.component.css",{"_index":1211,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1212,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":209,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":549,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":868,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1185,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":212,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usermatchweb.component.css",{"_index":1187,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1186,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":211,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":697,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["username/phon",{"_index":589,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":499,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/{userid",{"_index":1020,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["userservice:usercontrollerservic",{"_index":1347,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["ut",{"_index":1589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["utils/error.interceptor",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valu",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["variabl",{"_index":1458,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":695,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":733,"title":{},"body":{"components/HowToComponent.html":{}}}],["venmo",{"_index":1175,"title":{},"body":{"interfaces/User.html":{}}}],["verdict",{"_index":1196,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["vermont",{"_index":1590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":1606,"title":{},"body":{"index.html":{}}}],["via",{"_index":1660,"title":{},"body":{"index.html":{}}}],["view",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["viewchild",{"_index":1252,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1284,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1283,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":213,"title":{"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":877,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["void",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["vt",{"_index":1591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/LandingComponent.html":{}}}],["washington",{"_index":1594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":838,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["westvirginia",{"_index":1596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":643,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["whichev",{"_index":785,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.reload(tru",{"_index":1387,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["window.screen.width",{"_index":644,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":770,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":726,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":1012,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":521,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"interfaces/User.html":{}}}],["wv",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["x.active.tostr",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["year",{"_index":476,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["you'r",{"_index":834,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1639,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":848,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":711,"title":{},"body":{"components/HowToComponent.html":{}}}],["yyyi",{"_index":1177,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1145,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    addressID: number;\n    address: string;\n    address2?: string;\n    city: string;\n    state: string;\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Allows extra features reserved for Administrators\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                            Sets up Component with User Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets up a date and location encryption key \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Retrieves all offices, called on component initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Alows a New registration key to be used for New User Registration \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initilaizes the Component with the offices \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                        When the current batch ends \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                        Holds the office and batch end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Holds th current office being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds a list of offices \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds a registration key that new users can use to regiser themselves \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n/**\n * Allows extra features reserved for Administrators\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Holds a registration key that new users can use to regiser themselves */\n  registrationKey: string;\n  /** Holds a list of offices */\n  officeObjectArray: Office[] = [];\n  /** When the current batch ends */\n  batchEnd: string;\n  /** Holds th current office being viewed */\n  officeObject;\n\n  /** Holds the office and batch end */\n  encryptedLocationDate: string;\n\n  /**\n   * Sets up Component with User Service\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /** Initilaizes the Component with the offices */\n  ngOnInit() {\n    this.getOffices();\n  }\n\n  /** Alows a New registration key to be used for New User Registration */\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    );\n  }\n\n  /** Sets up a date and location encryption key */\n  dateLocationEncryption() {\n    let middleEncryption = btoa(this.officeObject + '~' + this.batchEnd);\n    if (middleEncryption.length != 28) {\n      middleEncryption = 'XcvF' + middleEncryption;\n    }\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  /**\n   * Retrieves all offices, called on component initialization\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                                {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  password: string;\n  confirmPassword: string;\n\n  onTap(event) {\n    console.log(event);\n  }\n\n \n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBXWXgWzxhyvz9JyN9SrHgGOzi7VcU5G3g',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Our http client dependency for making http requests\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to grab any user information from the API \n\n                                                        \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to save our generated token locally \n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The email address to be sent from the view to the API\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The password to be sent from the view to the API  \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * \n   * @param http Our http client dependency for making http requests\n   * @param userService Service used to grab any user information from the API \n   * @param tokenStorage Used to save our generated token locally \n   */\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage,\n    private route: Router\n  ) { }\n  /**\n   * \n   * @param email The email address to be sent from the view to the API\n   * @param password The password to be sent from the view to the API  \n   */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token');\n          this.tokenStorage.saveToken(token);\n          this.userService.getCurrentUser().subscribe();\n          return null;\n        })\n      );\n  }\n\n  authenticate(email: string, password: string, usePromise?: boolean) {\n    this.authenticator(email, password).toPromise().then(\n      (x) => {\n        console.log('Got user from Authenticate (Promise mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('active', x.active.toString());\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n        });\n        location.reload(true);\n      },\n      (e) => {\n        // error coming from the backend\n        console.log('Printing Login error (Promise Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            console.log(e.message);\n            if (e.message == 'GENERAL') {\n              messageLogin.innerHTML = \"Server unavailable\";\n            } else {\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n  }\n\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:8\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:12\n                            \n                        \n\n                \n                    \n                        The owner of this car.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"./user.model\";\nimport { Link } from \"./link.model\";\n\nexport class Car {\n    /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car.\n   */\n  owner: Link;\n  make: string;\n  model: string;\n  year: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the functionality of car registration and management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                            Sets up the Car Registration component with dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to manager the user AND the cars available on the system\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Sets the car with appropriate values and sends it to the server using the User Service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Makes sure there is a car object available to operate on\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Refreshes the fields in the Car form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Clears the fields in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Ensures that the component is working with the logged on user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:29\n                            \n                        \n\n                \n                    \n                        The company that manufactured it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model of the car\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:25\n                            \n                        \n\n                \n                    \n                        The car to create and register\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:49\n                            \n                        \n\n                \n                    \n                        List of cars owned by the ownwer to present in a table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:39\n                            \n                        \n\n                \n                    \n                        When the car was produced\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Relic from the AccountInfoComponent that previously managed cars\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:19\n                            \n                        \n\n                \n                    \n                        The User that owns the car\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Supports the functionality of car registration and management\n */\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  /**\n   * The User that owns the car\n   */\n  userObject: User;\n\n  // for drivers\n  /**\n   * The car to create and register\n   */\n  carObject: Car;\n  /**\n   * The company that manufactured it\n   */\n  carMake: string;\n\n  /**\n   * Model of the car\n   */\n  carModel: string;\n\n  /**\n   * When the car was produced\n   */\n  carYear: number;\n\n  /**\n   * Relic from the AccountInfoComponent that previously managed cars\n   */\n  optInToDrive: boolean;\n\n  /**\n   * List of cars owned by the ownwer to present in a table\n   */\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  /**\n   * Sets up the Car Registration component with dependencies\n   * @param {UserControllerService} userService - the Service that allows us to manager the user AND the cars available on the system\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Makes sure there is a car object available to operate on\n   */\n  ngOnInit() {\n    this.carObject = new Car();\n  }\n\n  /**\n   * Clears the fields in the form\n   */\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n\n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Ensures that the component is working with the logged on user\n   */\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      console.log('Car reg: Failed to get user: ' + e);\n    });\n\n  }\n\n  /**\n   * Sets the car with appropriate values and sends it to the server using the User Service\n   */\n  addCarToUser() {\n\n    this.resetUser();\n\n    this.carObject.id = 0;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id.toString();\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  /**\n   * Refreshes the fields in the Car form\n   */\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n    \n        Description\n    \n    \n        Provides an over view of User Likes, distinguishing between the mobile view and desktop view \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the device is amobile device and sets view accordingly \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                        Whether or not the Device is a mobile device \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Provides an over view of User Likes, distinguishing between the mobile view and desktop view */\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  /** Whether or not the Device is a mobile device */\n  public mobile = false;\n\n  constructor() { }\n\n  /** Checks to see if the device is amobile device and sets view accordingly */\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  geocoder: google.maps.Geocoder;\n\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n    \n        Description\n    \n    \n        Exists for Displaying a How-to page \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Exists for Displaying a How-to page */\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private tokenStorage: TokenStorage) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the Carousel Appearence as a Site Intro\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates the Landing Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Component to utilize User Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Initializes the component by retrieving the User\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Checks to see if there is a session or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:16\n                            \n                        \n\n                \n                    \n                        Holds the current user of the program \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                        Whether a User is, in fact, logged on \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n// import { Router } from '@angular/router';\n\n/**\n * Supports the Carousel Appearence as a Site Intro\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  /** Holds the current user of the program */\n  currentUser: User;\n  /** Whether a User is, in fact, logged on */\n  session: boolean;\n\n  /**\n   * Creates the Landing Component\n   * @param {UserControllerService} userService - Allows Component to utilize User Functionality\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Initializes the component by retrieving the User\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  //   this.userService.getCurrentUserObservable().subscribe(\n  //   data => {\n  //     this.currentUser = data;\n  //     console.log(this.currentUser)\n  //   }\n  // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Checks to see if there is a session or not\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Get\n            Started\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n      \n      RideForce\n      Looking for a ride? Sign up today to be a driver or a rider\n      Get\n          Started\n\n      \n        For more information,\n        click here\n      \n     -->\n\n\n      \n\n          Need a ride? Look no further than RideForce!\n          Use the App to find drivers to carpool in your\n          circle or area!\n\n\n       -->\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Get            Started        Browse                  For more information,          click here                          RideForce      Looking for a ride? Sign up today to be a driver or a rider      Get          Started              For more information,        click here           -->                Need a ride? Look no further than RideForce!          Use the App to find drivers to carpool in your          circle or area!       -->                                  Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a mobile device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:34\n                            \n                        \n\n                \n                    \n                        Hold current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Component that shows User Likes on a mobile device\n */\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    swipecards: SwipecardModel[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          Some example text.\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          Some example text.          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a desktop device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:57\n                            \n                        \n\n                \n                    \n                        Hold the current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    latitude: number;\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Responsible for providing a user the ability to log in\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Sets up the Login compoennt with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides the ability to authenticate the user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the ability to navigate to landing if user is already logged on\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(Unused) Provides cUser Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields. \nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The User to log on to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The \"username\" of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        The password associated with the indended account\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Responsible for providing a user the ability to log in\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * The \"username\" of the user\n   */\n  userEmail: string;\n\n  /**\n   * The password associated with the indended account\n   */\n  userPass: string;\n\n  /**\n   * The User to log on to\n   */\n  currentUser: User;\n\n  /**\n   * Sets up the Login compoennt with dependency injection\n   * @param { AuthService} authService - Provides the ability to authenticate the user\n   * @param {Router} route - provides the ability to navigate to landing if user is already logged on\n   * @param {UserControllerService} userService - (Unused) Provides cUser Functionality\n   */\n  constructor(private authService: AuthService, private route: Router, private userService: UserControllerService) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if (sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n\n  // getUser(email: string) {\n  //   let user;\n  //   return this.userService.getUserByEmail(email).subscribe();\n  // }\n\n  /**\n   * Gets the parameters from the login fields. \n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n@Injectable()\nexport class MapsControllerService {\n\n public constructor(private http: HttpClient) { }\n\n  /** \n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  */                                        \n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * \n   * @param start string address\n   * @param end string address\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    \n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    location: google.maps.LatLngLiteral;\n    address?: string;\n    label?: string;\n    userId?: number;\n    draggable?: boolean;\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from \"../../../app/models/user.model\";\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\n\n@Injectable()\nexport class MatchingControllerService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param uri \n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   * \n   * @param riderId\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n   \n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   * \n   * @param riderId \n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n    \n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param riderId \n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Hosts the Component that allows users to navigate between components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the component with relevent services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(unused, should be used by Login component) Enables component to authenticate user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Sets up the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session\nuses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Sets up the Log in Session appearence\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Updates the status of our session ( is the user currently logged on?)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the current user of the app \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     \n\n                    \n                \n                    \n                        \n                            Default value : sessionStorage.length > 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether the User is logged on or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n/**\n * Hosts the Component that allows users to navigate between components\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /** Holds the current user of the app */\n  currentUser: User;\n  /**\n   * Whether the User is logged on or not\n   */\n  session = sessionStorage.length > 0;\n\n  /**\n   * Sets up the component with relevent services\n   * @param {UserControllerService} userService - allows User Services to be utilized\n   * @param {AuthService} authService - (unused, should be used by Login component) Enables component to authenticate user\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router) { }\n\n  /**\n   * Sets up the Log in Session appearence\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Updates the status of our session ( is the user currently logged on?)\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n  /**\n   * Sets up the current user\n   */\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  }\n  // checkIfLoggedIn(){\n  //   if(this.userService.isLoggedIn){\n  //     this.isLoggedIn = true;\n  //   } \n  //   else if(!this.userService.isLoggedIn) {\n  //     this.isLoggedIn = false;\n  //   }\n  // }\n\n  // getCurrentUser(){\n  //   this.userService.getCurrentUser().subscribe(\n  //     data => {\n  //       this.currentUser = data;\n  //     }\n  //   )\n  // }\n\n  /**\n   * Allows User to log out of their session\n   * uses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n   */\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === \"/landing\") {\n      location.reload(true);\n    } else {\n      await this.route.navigate([\"/landing\"]);\n      location.reload(true);\n    }\n  }\n}\n\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    \n        \n          \n        \n        \n          About\n          User Settings\n        \n      \n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Logout\n      \n  \n  \n      \n        \n      \n      \n      \n        About\n        User Settings\n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                                                              About          User Settings                                Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Logout                                                  About        User Settings          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n    \n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  address: string;\n  \n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedAddress\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormattedAddress(place: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        place\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  private element: HTMLInputElement;\n\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = elRef.nativeElement;\n  }\n\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n\n  username: string;\n  password: string;\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  public mobile = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\nexport class SwipecardModel {\n    user: User;\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/token.storage.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'authToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  constructor() { }\n\n  signOut() {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  FOLDER = 'rydeforce-s3/';\n  url: any;\n  \n  constructor() { }\n\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  } \n\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    let upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  firstName: string;\n  lastName: string;\n  // username\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: boolean;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Used as a more complex data structure for holding info on liked users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (Unknown) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status of the User \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Driver that they like \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\ninterface UserCard {\n  user: User;\n  choose: string;\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a mobile view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            action triggered when user swipes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Called when the swipe animation has completed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Called when the Thumb Animation is done\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:49\n                            \n                        \n\n                \n                    \n                        Keeps track of the Animation state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:51\n                            \n                        \n\n                \n                    \n                        Keeps track of the Thumb animation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:47\n                            \n                        \n\n                \n                    \n                        Index of the Current User being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:45\n                            \n                        \n\n                \n                    \n                        User currently being looked at \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:68\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:37\n                            \n                        \n\n                \n                    \n                        constant for swipe action: left or right \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeBio' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:56\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeMain' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:39\n                            \n                        \n\n                \n                    \n                        our list of swipecards: DUMMY DATA \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:53\n                            \n                        \n\n                \n                    \n                        Location of the thumbnail image files \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { AddressModel } from '../../models/address.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Allows Views for Other Users in a mobile view\n */\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    /** constant for swipe action: left or right */\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    /** our list of swipecards: DUMMY DATA */\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    /** User currently being looked at */\n    currentSwipeCard: SwipecardModel;\n    /** Index of the Current User being viewed */\n    currentIndex = 0;\n    /** Keeps track of the Animation state */\n    animState = 'center';\n    /** Keeps track of the Thumb animation */\n    animThumbState = 'one';\n    /** Location of the thumbnail image files */\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    /** Represents the div element 'swipeMain' */\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    /** Represents the div element 'swipeBio' */\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /** Holds the current user of the system */\n    currentUser: User;\n\n    /**\n     * Sets up the component by populating the list of possibel matches for the current user\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    /**\n     *  action triggered when user swipes\n     */\n     swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    /**\n     * Called when the swipe animation has completed\n     */\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                     duration / distance\n                     contacts\n                    link to bio\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    Distance: \n                    Contact: \n                    car info: \n                    ride info: \n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                          duration / distance                     contacts                    link to bio                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                        Distance:                     Contact:                     car info:                     ride info:                                                     There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a desktop view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:35\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Handles verdict a user gives on a potential match\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe user being evaluated\n\n\n                                                        \n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe judgment on the viewed user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\ninterface UserCard {\n  user: User;\n  choose: string;\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                X -->\n                \n                \n                \n                O -->\n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                              X -->                                                                O -->                                                                                         {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewProfileComponent.html":{"url":"components/ViewProfileComponent.html","title":"component - ViewProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/view-profile/view-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-profile\n            \n\n            \n                styleUrls\n                view-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address2\n                            \n                            \n                                batchEnd\n                            \n                            \n                                canEdit\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                currentRole\n                            \n                            \n                                currentUser\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRole\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitChanges\n                            \n                            \n                                switchRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/view-profile/view-profile.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canEdit:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     Office\n\n                    \n                \n                    \n                        \n                            Type :     Office\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n//import { DateFormatPipe } from '../../pipes/date-format.pipe';\nimport { Role } from '../../models/role.model';\nimport { Office } from '../../models/office.model';\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  currentUser: User;\n  constructor(private userService:UserControllerService) { }\n  firstName : string;\n  lastName : string;\n  username : string;\n  password : string;\n  confirmPassword : string;\n  address2 : string;\n  batchEnd : any;\n  canEdit : boolean = false;\n  officeObjectArray: Office[] = [];\n  officeObject: Office;\n  \n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n        // this.currentUser = data;\n        // console.log(this.currentUser);\n      this.firstName = sessionStorage.getItem(\"firstName\");\n      this.lastName = sessionStorage.getItem(\"lastName\");\n      this.username = sessionStorage.getItem(\"userEmail\");\n      // console.log(this.userService.getOfficeByLink(this.currentUser.office).subscribe().toString());\n      // document.getElementById(\"currentOffice\").textContent = this.userService.getOfficeByLink(this.currentUser.office).toString();\n      this.address2 = sessionStorage.getItem(\"address\");\n      this.batchEnd = new Date(sessionStorage.getItem(\"batchEnd\")).toLocaleDateString();\n    //   }\n    // );\n    this.getOffices();\n    this.getUsers();\n    this.getRole();\n  }\n\n  edit() {\n    document.getElementById(\"firstName\").removeAttribute(\"disabled\");\n    document.getElementById(\"lastName\").removeAttribute(\"disabled\");\n    document.getElementById(\"email\").removeAttribute(\"disabled\");\n    document.getElementById(\"password\").removeAttribute(\"disabled\");\n    document.getElementById(\"confirmPassword\").removeAttribute(\"disabled\");\n    document.getElementById(\"address\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").setAttribute(\"type\", \"date\");\n    document.getElementById(\"currentOffice\").style.display = \"none\";\n    document.getElementById(\"selectOffice\").style.display = \"inline\";\n    document.getElementById(\"edit\").style.display = \"none\";\n    document.getElementById(\"submit\").style.display = \"inline\";\n    document.getElementById(\"errorMessage\").removeAttribute(\"hidden\");\n  }\n\n  submitChanges() {\n\n    sessionStorage.setItem(\"firstName\", this.firstName);\n    sessionStorage.setItem(\"lastName\", this.lastName);\n    sessionStorage.setItem(\"userEmail\", this.username);\n    sessionStorage.setItem(\"address\", this.address2);\n    sessionStorage.setItem(\"batchEnd\", this.batchEnd);\n    sessionStorage.setItem(\"role\", this.currentRole);\n    this.userService.update().subscribe();\n    //this.userService.updatePassword(this.currentUser.id, \"p4ssw0rd\", this.password).subscribe();\n    window.location.reload(true);\n  }\n\n  switchRole() {\n    if(sessionStorage.getItem(\"role\") === \"DRIVER\") {\n      sessionStorage.setItem(\"role\", \"RIDER\");\n      this.getRole();\n    } else if(sessionStorage.getItem(\"role\") === \"RIDER\") {\n      sessionStorage.setItem(\"role\", \"DRIVER\");\n      this.getRole();\n    } else {\n      console.log(\"nope\");\n    }\n  }\n\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n    });\n  }\n\n  currentRole : string;\n  getRole() {\n    this.currentRole = sessionStorage.getItem(\"role\");\n  }\n\n  users: any[];\n  getUsers(){\n    let data;\n    // this.postService.getPosts().then((allPosts) => {posts = allPosts; console.log(posts.results[0].id)});\n    this.userService.getAllUsers().subscribe((x) => {data = x; this.users = data});\n  }\n\n  // passCheck() {\n  //   if(this.password !== this.confirmPassword) {\n  //     document.getElementById(\"passwordError\").style.display = \"inline\";\n  //   } else { \n  //     sessionStorage.setItem(\"userPassword\", this.password);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n              \n              Your Profile:\n              \n              \n                \n                  First Name\n                \n                \n                  \n                    \n                   -->\n              \n              \n                \n                  First name cannot be empty\n                \n                \n                  ;\n                  First name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Last Name\n                \n                \n              \n              \n                \n                  Last name cannot be empty\n                \n                \n                  ;\n                  Last name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Email\n                \n                \n              \n              \n                \n                  Email cannot be empty\n                \n                \n                  Email cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Password\n                \n                \n              \n              \n                \n                  Password cannot be empty\n                \n                \n                  Password cannot be more than 15 characters\n                \n              \n              \n                \n                  Confirm\n                \n                \n              \n              \n                \n                  Password Confirm cannot be empty\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                 -->\n                \n                  Passwords do not match.\n                \n              \n\n              \n                \n                  Key\n                \n                \n              \n              \n                \n                  You need a Key\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                \n               -->\n\n              \n                \n                  Office Address\n                \n                \n                   -->\n                \n                \n                  \n                    {{office.name}}\n                  \n                \n                 -->\n                 -->\n              \n\n\n              \n                \n                  Address\n                \n                \n                 -->\n              \n              \n                \n                  Address cannot be empty\n                \n              \n\n              \n                \n                  Batch End\n                \n                \n              \n              \n                Switch to Rider \n              \n              \n                Switch to Driver \n              \n              \n              \n                Edit \n              \n              Save Changes \n              \n                \n                  Please fill out ALL fields and confirm your passwords match\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Biography:\n              \n              \n                \n                  About You\n                \n              \n              \n              \n\n              \n                Profile Picture\n                \n              \n              \n                \n                  Contact Info\n                \n                \n                 -->\n                \n                  \n                    \n                  \n                \n              \n\n              \n                \n                  \n                    \n                      {{contact}}\n                    \n                  \n                  \n                  -\n                \n              \n              \n                Previous\n                 Next\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Car Information:\n              \n              \n                \n                  Driver\n                  Rider\n                \n              \n              \n              \n                \n                  \n                    Make\n                  \n                  \n                \n\n                \n                  \n                    Model\n                  \n                  \n                \n\n                \n                  \n                    Year\n                  \n                  \n                \n              \n              \n                Previous\n                 Edit\n              \n              \n                \n                  Please select Driver or Rider\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Review and submit:\n              \n              User Information\n              First name: {{firstName}} \n              Last Name: {{lastName}} \n              Email: {{username}} \n               Office Address: {{officeObject}}\n               Apartment Address: {{address2}}\n              Batch: {{batchEnd}} \n              \n               0\">\n                Biography\n                About You: {{bio}}\n                Contact Info:\n                \n                   {{item.type}}: {{item.info}}  \n                \n              \n              \n              \n                Car Info\n                Make: {{carMake}} \n                Model: {{carModel}} \n                Year: {{carYear}} \n              \n              \n              \n\n                 Previous\n\n                 Finish\n              \n            \n          \n        \n       -->\n      \n        \n          \n            \n            \n            View Users\n            \n              \n                \n                  User ID\n                  User's Name\n                  User Email\n                  User Role\n                   \n                \n              \n              \n                \n                  {{ user.id }}\n                  {{ user.firstName }}&nbsp;{{ user.lastName }}\n                  {{ user.email }}\n                  {{ user.role }}\n                  Make Admin\n                    Make Trainer\n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Your Profile:                                                              First Name                                                                                         -->                                                              First name cannot be empty                                                  ;                  First name cannot be more than 15 characters                                                                              Last Name                                                                                              Last name cannot be empty                                                  ;                  Last name cannot be more than 15 characters                                                                              Email                                                                                              Email cannot be empty                                                  Email cannot be more than 15 characters                                                                              Password                                                                                              Password cannot be empty                                                  Password cannot be more than 15 characters                                                                              Confirm                                                                                              Password Confirm cannot be empty                                                  Password Confirm cannot be more than 15 characters                 -->                                  Passwords do not match.                                                                              Key                                                                                              You need a Key                                                  Password Confirm cannot be more than 15 characters                               -->                                                Office Address                                                   -->                                                                      {{office.name}}                                                   -->                 -->                                                              Address                                                 -->                                                              Address cannot be empty                                                                              Batch End                                                                            Switch to Rider                                             Switch to Driver                                                           Edit                             Save Changes                                                 Please fill out ALL fields and confirm your passwords match                                                                                                                                  Biography:                                                              About You                                                                                        Profile Picture                                                                              Contact Info                                                 -->                                                                                                                                                                                                {{contact}}                                                                          -                                                            Previous                 Next                                                                                                                  Car Information:                                                              Driver                  Rider                                                                                                                Make                                                                                                          Model                                                                                                          Year                                                                                                Previous                 Edit                                                              Please select Driver or Rider                                                                                                                                  Review and submit:                            User Information              First name: {{firstName}}               Last Name: {{lastName}}               Email: {{username}}                Office Address: {{officeObject}}               Apartment Address: {{address2}}              Batch: {{batchEnd}}                              0\">                Biography                About You: {{bio}}                Contact Info:                                   {{item.type}}: {{item.info}}                                                                            Car Info                Make: {{carMake}}                 Model: {{carModel}}                 Year: {{carYear}}                                                            Previous                 Finish                                                   -->                                                            View Users                                                            User ID                  User\\'s Name                  User Email                  User Role                                                                                                 {{ user.id }}                  {{ user.firstName }} {{ user.lastName }}                  {{ user.email }}                  {{ user.role }}                  Make Admin                    Make Trainer                                                                                                      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                93 %\n                (56/60)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                89 %\n                (43/48)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                43 %\n                (13/30)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n  // apiUrl: 'http://192.168.60.54:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
